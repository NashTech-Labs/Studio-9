{{/*
    If the user does not have cert-manager and is not providing a secret with the certificates, the chart needs to generate the secret
  */}}
{{- $ca := genCA "rmq-msg-topology-ca" 365 }}
{{- $cert := genSignedCert (include "rmqco.msgTopologyOperator.fullname" .) nil (list (printf "%s.%s.svc" (include "rmqco.msgTopologyOperator.webhook.fullname" .) .Release.Namespace) (printf "%s.%s.svc.%s" (include "rmqco.msgTopologyOperator.webhook.fullname" .) .Release.Namespace .Values.clusterDomain)) 365 $ca }}

{{- if and (not .Values.useCertManager) (not .Values.msgTopologyOperator.existingWebhookCertSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $cert.Cert | b64enc | quote }}
  tls.key: {{ $cert.Key | b64enc | quote }}
  ca.crt: {{ $ca.Cert | b64enc | quote }}
{{- end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.useCertManager }}
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace ( include "rmqco.msgTopologyOperator.webhook.secretName" . ) }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-binding
    failurePolicy: Fail
    name: vbinding.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - bindings
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-exchange
    failurePolicy: Fail
    name: vexchange.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - exchanges
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-federation
    failurePolicy: Fail
    name: vfederation.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - federations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: webhook-service
        namespace: rabbitmq-system
        path: /validate-rabbitmq-com-v1alpha1-superstream
    failurePolicy: Fail
    name: vsuperstream.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - superstreams
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-permission
    failurePolicy: Fail
    name: vpermission.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - permissions
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-policy
    failurePolicy: Fail
    name: vpolicy.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - policies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-queue
    failurePolicy: Fail
    name: vqueue.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - queues
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-schemareplication
    failurePolicy: Fail
    name: vschemareplication.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schemareplications
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-shovel
    failurePolicy: Fail
    name: vshovel.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - shovels
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-user
    failurePolicy: Fail
    name: vuser.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      {{- if not .Values.useCertManager }}
      caBundle: {{ default $ca.Cert .Values.msgTopologyOperator.existingWebhookCertCABundle | b64enc | quote }}
      {{- end }}
      service:
        name: {{ template "rmqco.msgTopologyOperator.webhook.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        path: /validate-rabbitmq-com-v1beta1-vhost
    failurePolicy: Fail
    name: vvhost.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - vhosts
    sideEffects: None
