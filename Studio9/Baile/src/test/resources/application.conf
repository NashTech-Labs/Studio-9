akka {
  actor.provider = local
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  test {
    # The tight timeouts you use during testing on your lightning-fast notebook
    # will invariably lead to spurious test failures on the heavily loaded Jenkins server (or similar).
    # To account for this situation, all maximum durations are internally scaled by a factor
    timefactor =  5.0
  }
}

um-service {
  client-id = "um-id"
  client-secret = "um-secret"
  url = "http://um.service.example.com"
  org-id = "org-id"
  um-timeout = 30
  admin-role-id = "adminId"
}

routes {
  debug-exceptions = true
  default-page-size = 30
}

cortex {
  rest-url = "http://localhost:9001"
  api-version = v1
  user = john.doe
  password = blackcat
  job {
    dir = "test/jobs"
  }
}

aries {
  rest-url = "http://localhost:9002"
  api-version = ${cortex.api-version}
  user = ${cortex.user}
  password = ${cortex.password}
}

argo {
  rest-url = "http://localhost:9003"
  api-version = v1
  user = john.doe
  password = blackcat
}

gemini {
  rest-url = "http://localhost:9004"
  api-version = v1
  user = john.doe
  password = blackcat
}

akka {
  loggers = ["akka.testkit.TestEventListener"]
  stdout-loglevel = "OFF"
  loglevel = "OFF"
  actor.provider = "local"
}

aws {
  key-prefix = "baile/data/"
  predefined-buckets = [
    {
      id = "1"
      name = "test.deepcortex.ai"
      access-key = "access-key"
      secret-key = "xxxxx"
      region = "us-east-1"
    },
    {
      id = "2"
      name = "test2.deepcortex.ai"
      access-key = "access-key"
      secret-key = "xxxxx"
      region = "us-west-1"
    }
  ]
  policy {
    s3-access-policy-path = "s3-access-policy"
  }
  # Value must be less than or equal to 43200 seconds
  temporary-credentials-duration = 43200
}

online-prediction {
  username = "online-predictor"
  password = "predict-me"
  streamid = "8e25ced2-8fe4-4eae-8754-189a9af94f4a"
}

album {
  labels-uploading {
    s3-csv-chunk-size = 10MB
    csv-lines-chunk-size = 20000
  }
  images-job-result-processing {
    batch-size = 500
  }
}

dc-project {
  storage-prefix = ${aws.key-prefix}
}

tables {
  histogram-length = 120
}

dataset {
  storage-prefix = ${aws.key-prefix}
}

tabular-storage {
  host = "redshift.amazonaws.com"
  port = "1234"
  database = "test"
  username = "username"
  password = "xxxxxxxxxxxxxxxxxxx"
}

tabular-models {
  probability-columns-prefix = "class_probability_"
  module-name = "fused_pipeline_stage"
  class-name = "FusedTabularPipeline"
  package-name = "deepcortex-ml-lib"
}

gemini {
  api-version = "1.2"
  gemini-url = "/gemini"
  user = "MyUser"
  password = "password"
}

dremio {
  url = "url"
  username = "username"
  password = "password"
  space = "deepcortex"
  max-retries = 3
  first-retry-delay = 10000 milliseconds
}
