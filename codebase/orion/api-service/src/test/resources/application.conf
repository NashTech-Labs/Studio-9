akka {
  loglevel = INFO

  persistence {
    journal {
      plugin = akka.persistence.journal.leveldb
      leveldb {
        dir = "target/persistence/journal"
        native = on
      }
    }
    snapshot-store {
      plugin = akka.persistence.snapshot-store.local
      local.dir = "target/persistence/snapshots"
    }
  }

    actor {
      # which serializers are available under which key
      serializers {
        java = "akka.serialization.JavaSerializer"
        job-message = "orion.common.serialization.JobMessagePlayJsonSerializer"
      }

      # which interfaces / traits / classes should be handled by which serializer
      serialization-bindings {
        "java.io.Serializable" = java
        "cortex.api.job.message.JobMessage" = job-message
      }
    }
}

op-rabbit {
  topic-exchange-name = "ml_job.gateway"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 10
  }
  connection {
    virtual-host = "/"
    hosts = ["127.0.0.1"]
    username = "guest"
    password = "guest"
    port = 5672
    ssl = false
    connection-timeout = 3s
  }
}

marathon-client {
  marathon-endpoint = "http://127.0.0.1:8080"
}

job-supervisor {
  job-master-start-timeout = 5 minutes
  job-master-heartbeat-timeout = 5 minutes
  message-publishing-timeout = 30 seconds
  message-publishing-retries = 5
}

job-master {
  docker-image = "deepcortex/cortex-job-master:1.0.0"
  force-docker-pull = false
  app-environment-variables = [
    { name = "RABBIT_HOSTS", value = "127.0.0.1" },
    { name = "RABBIT_USERNAME", value = "guest" },
    { name = "RABBIT_PASSWORD", value = "guest" }
  ]
  mesos-master-address = "127.0.0.1:5050"
  cpus = 1
  memory = 1024
  instances = 1
  jvm-heapsize-factor = 100
}
