http {
  interface = "0.0.0.0"
  port = "8000"
  prefix = "v0.1"
  prefix = ${?HTTP_SERVER_PREFIX}
}

db {
  jdbc-driver = "redshift"
  jdbc-driver = ${?DB_PROTOCOL}
  host = "redshift.amazonaws.com"
  host = ${?DB_HOST}
  port = "1234"
  port = ${?DB_PORT}
  database = "test"
  database =  ${?DB_NAME}
  username = "username"
  username = ${?DB_USERNAME}
  password = "xxxxxxxxxxxxxxxxxxx"
  password = ${?DB_PASSWORD}
  connection-pool { // FIXME use it
    pool-name = "sql-server-db-pool"
    initial-size = 0
    max-size = 8
    connection-timeout = 500
    driver-name = "com.amazon.redshift.jdbc42.Driver"
  }
  fetch-size = 50000 // in cells, NOT in rows
}

akka {
  http {
    client {
      connecting-timeout = 120 s
      response-timeout = 60 s
      max-retries = 3
      first-retry-delay = 100 milliseconds
    }
  }
}

um-service {
  url = "http://localhost:9000"
  url = ${?UM_SERVICE_URL}
}

routes {
  debug-exceptions = false
  debug-exceptions = ${?DEBUG_EXCEPTIONS}
}

baile {
  rest-url = "http://localhost:9001"
  rest-url = ${?BAILE_URL}
  user = "john"
  user = ${?BAILE_USERNAME}
  password = "doe"
  password = ${?BAILE_PASSWORD}
}

dremio {
  url = "http://localhost:9047"
  url = ${?DREMIO_BASE_URL}
  username = "username"
  username = ${?DREMIO_USERNAME}
  password = "password"
  password = ${?DREMIO_PASSWORD}
  space = "deepcortex"
  space = ${?DREMIO_SPACE}
  initial-token-timeout = 30 seconds
  token-refresh-period = 15 hours
}

tabular-storage {
  dremio {
    actor-timeout = 30 seconds
    job {
      max-retries = 50
      retry-delay = 100 milliseconds
    }
  }
}
