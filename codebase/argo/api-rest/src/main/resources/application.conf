argo-service {
  name = "argo-api"
  version = "v1"
}

akka {
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
  loglevel = ${?AKKA_LOGLEVEL}

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  jvm-exit-on-fatal-error=off

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      event-stream = off
    }
    info {
      receive = off
      autoreceive = off
      lifecycle = off
      event-stream = off
    }
  }
}

akka.http {
  server {
    server-header = ${argo-service.name}/${argo-service.version}
    idle-timeout = 60 s
    request-timeout = 120 s
    max-connections = 1024
  }

  client {
    connecting-timeout = 120 s
  }

  host-connection-pool {
    max-connections = 1024
    max-retries = 3
    max-open-requests = 16384
  }
}

http {
  interface = "0.0.0.0"
  port = 9000

  auth-user-name = "auth-user"
  auth-user-name = ${?HTTP_AUTH_USER_NAME}

  auth-user-password = "auth-password"
  auth-user-password = ${?HTTP_AUTH_USER_PASSWORD}
}

elastic-search {
  user = "elastic"
  user = ${?ELASTIC_USER_NAME}

  password = "changeme"
  password = ${?ELASTIC_PASSWORD}

  host = "localhost"
  host = ${?ELASTIC_HOST}

  port = 9200
  port = ${?ELASTIC_PORT}

  useSSL = false
  useSSL = ${?ELASTIC_SSL}

  useAuth = false
  timeout = 60

  config-setting-index-name = "cortex_config_settings_dev"
  config-setting-index-name = ${?ELASTIC_CONFIG_SETTING_INDEX}

  indexes {
    config-setting = {name: ${elastic-search.config-setting-index-name}, type: "config_setting"}
  }
}
