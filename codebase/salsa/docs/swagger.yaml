---
swagger: '2.0'
info:
  title: Knoldus / Studio9 API
  description: Do-it-yourself big data analytics & machine learning
  contact:
    name: Knoldus
    url: http://knoldus.com
    email: support@knoldus.com
  version: 2.0.0
host: dev.studio9.ai
schemes:
- https
- http
basePath: "/v2.0/"
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
tags:
- name: New
  description: New
- name: Album
  description: Album
- name: Flow
  description: Flow
- name: Table
  description: Table
- name: TabularModel
  description: TabularModel
- name: CVModel
  description: CVModel
- name: Prediction
  description: Prediction
- name: CVPrediction
  description: CVPrediction
- name: Replay
  description: Replay
- name: DIAA
  description: DIAA
- name: ONLINE_JOB
  description: Online
- name: Dashboard
  description: Dashboard
- name: Process
  description: Process
- name: Me
  description: Me
- name: Share
  description: Share
- name: API
  description: Online API
- name: CVArchitecture
  description: CV Architecture
- name: S9Project
  description: S9 Project
- name: Experiment
  description: Experiment
- name: User
  description: User
- name: User Group
  description: User Group
- name: Pipeline
  description: Pipeline
- name: PipelineOperator
  description: Pipeline Operator
- name: Dataset
  description: Dataset
paths:
  "/experiments":
    get:
      summary: Experiment / List
      description: "..."
      tags:
      - Experiment
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListExperiment"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Experiment / Create
      description: "..."
      tags:
      - Experiment
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/ExperimentCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ExperimentFull"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/experiments/{experimentId}":
    get:
      summary: Experiment / View
      description: "..."
      tags:
      - Experiment
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/experimentId"
      responses:
        '200':
          description:  Experiment Object
          schema:
            "$ref": "#/definitions/ExperimentFull"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Experiment / Update
      description: "..."
      tags:
      - Experiment
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/experimentId"
      - "$ref": "#/parameters/ExperimentUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ExperimentFull"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Experiment / Delete
      description: "..."
      tags:
      - Experiment
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/experimentId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/experiments/{experimentId}/process":
    get:
      summary: Experiment / Process
      description: "..."
      tags:
        - Experiment
        - Process
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/experimentId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums":
    get:
      summary: Albums / List
      description: '...search by fields - "name", etc.'
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListAlbum"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Album / Create
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/AlbumCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/save":
    post:
      summary: Save Album To The Library
      description: Save Album To The Library
      tags:
      - Albums
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/AlbumSave"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}":
    get:
      summary: Album / View
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Model Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Album / Update
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/AlbumUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Album / Delete
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/tags":
    get:
      summary: Album Tags summary
      tags:
      - Album
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of tags
          schema:
            "$ref": "#/definitions/AlbumTagsSummary"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/export":
    get:
      summary: Album labels Export
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/token"
      - "$ref": "#/parameters/sharedResourceId"
      produces:
      - text/csv
      responses:
        '200':
          description: Object
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            type: string
  "/albums/{albumId}/pictures":
    get:
      summary: Album / Pictures
      description: '...search by fields - "name", etc.'
      tags:
      - Album
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/albumLabelsFilter"
      - "$ref": "#/parameters/pictureAugmentationFilter"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListPicture"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Creating album pictures for already existing picture files
      tags:
      - Album
      - Attach
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/AddPictures"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/uploadPicture":
    post:
      summary: Upload Pictures into an Album
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/filename"
      - "$ref": "#/parameters/UploadFile"
      consumes:
      - multipart/form-data
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Picture"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/importLabelsFromS3":
    post:
      summary: Upload Picture Labels into an Album From AWS
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/importLabelsFromS3"
      responses:
        '202':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/importPicturesFromS3":
    post:
      summary: Upload Pictures into an Album
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/ImportFromS3UploadLabelsFile"
      - "$ref": "#/parameters/ImportFromS3AWSS3BucketId"
      - "$ref": "#/parameters/ImportFromS3AWSRegion"
      - "$ref": "#/parameters/ImportFromS3AWSS3BucketName"
      - "$ref": "#/parameters/ImportFromS3AWSAccessKey"
      - "$ref": "#/parameters/ImportFromS3AWSSecretKey"
      - "$ref": "#/parameters/ImportFromS3AWSSessionToken"
      - "$ref": "#/parameters/ImportFromS3ImagesPath"
      - "$ref": "#/parameters/ImportFromS3CSVPath"
      - "$ref": "#/parameters/applyLogTransformation"
      consumes:
      - multipart/form-data
      responses:
        '202':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/importPicturesFromS3/":
    post:
      summary: Upload Pictures into an Album (JSON payload)
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/importPicturesFromS3"
      consumes:
      - application/json
      responses:
        '202':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/importVideoFromS3":
    post:
      summary: Upload Video as an Album
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/importVideoFromS3"
      responses:
        '202':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/uploadLabels":
    post:
      summary: Appends picture labels via csv into an Album
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/UploadLabelsFile"
      responses:
        '202':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/pictures/{pictureId}":
    get:
      summary: Album / Picture / View
      description: "..."
      tags:
      - Album
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/pictureId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Model Object
          schema:
            "$ref": "#/definitions/Picture"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Album Picture Update
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/pictureId"
      - "$ref": "#/parameters/PictureUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Picture"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Album / Delete
      description: "..."
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/pictureId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/process":
    get:
      summary: Album / Process
      description: "..."
      tags:
      - Album
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/copy":
    post:
      summary: Album / Album copy
      description: Create Album with copied pictures
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/AlbumCopy"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/albums/{albumId}/augment":
    post:
      summary: Album / Album augmentations
      description: Create Album with augmented pictures
      tags:
      - Album
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/albumId"
      - "$ref": "#/parameters/AlbumAugment"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Album"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/s9-projects":
    get:
      summary: S9 Projects / List
      description: Request paginated list of S9 Projects with search filtration
      tags:
      - New
      - S9Project
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/page"
      - $ref: "#/parameters/page_size"
      - $ref: "#/parameters/order"
      - $ref: "#/parameters/search"
      - $ref: "#/parameters/assetProjectId"
      - $ref: "#/parameters/assetFolderId"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/ListS9Project"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: S9 Projects / Create
      description: Create a S9 Project
      tags:
      - New
      - S9Project
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/S9ProjectCreate"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/S9Project"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}":
    get:
      summary: S9 Project / View
      description: Get a S9Project object
      tags:
      - New
      - S9Project
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/S9ProjectId"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/S9Project"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: S9 Project / Update
      description: Update a S9 Project
      tags:
      - New
      - S9Project
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/S9ProjectId"
      - $ref: "#/parameters/S9ProjectUpdate"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/S9Project"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: S9 Project / Delete
      description: Delete a S9 Project
      tags:
      - New
      - S9Project
      security:
      - Bearer: []
      parameters:
      - $ref: "#/parameters/S9ProjectId"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}/ls":
    get:
      summary: S9 Project Files / List
      description: List S9 Project files by path
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - in: query
          name: path
          required: false
          description: Directory path to list files from
          type: string
        - in: query
          name: recursive
          required: false
          description: List all files recursively
          type: boolean
      responses:
        '200':
          description: List of files
          schema:
            type: array
            items:
              $ref: '#/definitions/S9ProjectFile'
        '404':
          description: Directory was not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}/files/{filePath}":
    get:
      summary: S9 Project File / Download
      description: Retrieve S9 Project File content
      tags:
        - New
        - S9Project
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - $ref: '#/parameters/S9ProjectFilePath'
      security:
        - Bearer: []
      responses:
        '200':
          description: Success. Send file content body
          headers:
            Last-Modified:
              type: string
              format: date-time
              description: last file modification time in RFC-1123 format
          schema:
            type: file
        '404':
          description: File was not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: S9 Project File / Delete
      description: Delete file or directory
      tags:
        - New
        - S9Project
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - $ref: '#/parameters/S9ProjectFilePath'
      responses:
        '200':
          description: Success. File was deleted
        '404':
          description: File was not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: S9 Project File / Create
      description: Create, update, move or copy S9 Project files
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - $ref: '#/parameters/S9ProjectFilePath'
        - in: header
          name: content-type
          required: true
          type: string
          description: Send application/x-directory and an empty _body_ to create directory in __filePath__
        - in: body
          name: file
          required: false
          schema:
            type: string
            format: byte
          description: S9 Project File content to upload to specified __filePath__
        - in: header
          name: x-copy-source
          required: false
          type: string
          description: Source path to copy file/directory from. __filePath__ will be used as destination. Requires an empty _body_.
        - in: header
          name: x-move-source
          required: false
          type: string
          description: Source path to move file/directory from. __filePath__ will be used as destination. Requires an empty _body_.
        - in: header
          name: If-Unmodified-Since
          required: true
          type: string
          format: date-time
          description: The last modification date. Used to avoid collisions between sessions when updating existing file. Required for requests with non empty _body_. RFC-1123 format
      responses:
        '200':
          description: Success. Existing S9 Project File/Directory was updated.
          schema:
            $ref: '#/definitions/S9ProjectFile'
        '201':
          description: Created. A new S9 Project File/Directory was created.
          schema:
            $ref: '#/definitions/S9ProjectFile'
        '404':
          description: File was not found
          schema:
            $ref: "#/definitions/Error"
        '409':
          description: Conflict. Operation with S9 Project File/Directory is not possible because it's conflicting with existing version of the file (eg file was changed by another user and your file version is outdated or __filePath__ already exists)
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}/session":
    get:
      summary: S9 Project / Session / View
      description: Get a __S9 Project__ session data
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/S9ProjectSession"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: S9 Project / Session / Start
      description: Start a __S9 Project__ session
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - $ref: "#/parameters/S9ProjectSessionCreate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/S9ProjectSession"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: S9 Project / Session / Delete
      description: Delete __S9 Project__ session
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}/session/status":
    get:
      summary: S9 Project / Session / Status
      description: Get a __S9 Project__ session status
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
      produces:
        - text/event-stream
        - application/javascript
      responses:
        "200":
          description: Success
          schema:
            type: string
            example: "Example1: data: COMPLETED\nExample2: event: Heartbeat\\ndata: COMPLETED"
            x-events:
              "Heartbeat":
                description: Session heartbeat event to avoid disconnections. Contains an empty message.
                type: string
              default:
                description: Status change event data
                $ref: "#/definitions/S9ProjectSessionStatus"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/packages":
    get:
      summary: S9 Projects / Packages List
      description: Request paginated list of __S9 Project Packages__ with search filtration
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - in: query
          name: ownerId
          type: string
          required: false
          description: Owner ID to filter with
        - in: query
          name: S9ProjectId
          type: string
          required: false
          description: __S9 Project__ ID to filter with
        - $ref: "#/parameters/search"
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
        - $ref: "#/parameters/order"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/ListPackages"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/packages/{packageId}":
    get:
      summary: S9 Projects / Package View
      description: Load __S9 Project Package__ with pipeline operators
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/packageId"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/Package+"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: S9 Projects / Package Delete
      description: Delete __S9 Project Package__
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/packageId"
      responses:
        '200':
          description: Success
          schema:
            properties:
              id:
                type: string
                description: ID
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/packages/{packageId}/publish":
    post:
      summary: S9 Projects / Package Publish
      description: Publish __S9 Project Package__
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/packageId"
        - $ref: "#/parameters/PackagePublish"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/Package+"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/s9-projects/{projectId}/build":
    post:
      summary: S9 Projects / Build
      description: Build __S9 Project__ as a __Package__ without publishing it
      tags:
        - New
        - S9Project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/S9ProjectId"
        - $ref: "#/parameters/PackageBuild"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/S9Project"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/flows":
    get:
      summary: Flow / List
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListFlow"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Flow / Create
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/FlowCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flow"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}":
    get:
      summary: Flow / View
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flow+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Flow / Update
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/FlowUpdate"
      - "$ref": "#/parameters/flowId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flow"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Flow / Delete
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/steps":
    get:
      summary: Flowstep / List
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/Flowstep"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Flowstep / Create
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/FlowstepCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flowstep"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/steps/{stepId}":
    get:
      summary: Flowstep / View
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/stepId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flowstep"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Flowstep / Update
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/stepId"
      - "$ref": "#/parameters/FlowstepUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flowstep"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Flowstep / Delete
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/stepId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/steps/{stepId}/clusters":
    get:
      summary: Clustering
      description: Clustering Results
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/stepId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Result for clustering
          schema:
            "$ref": "#/definitions/ClusteringResult"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/steps/{stepId}/process":
    post:
      summary: RESERVED // Flowstep / Process
      description: Experimental.
      tags:
      - Flow
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/stepId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/tables":
    get:
      summary: Flow / Table List
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/tables/{tableId}":
    put:
      summary: Flow / Table add
      description: Add (link) table to specific flow
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Flow / Table remove
      description: Remove (unlink) table from specific flow
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/models":
    get:
      summary: Flow / TabularModel List
      description: "..."
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/TabularModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/inputs":
    get:
      summary: List of used columns (from source tables that affect flow)
      description: List of source table's columns used in flowsteps futher
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/FlowInput"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/outputs":
    get:
      summary: List of derived tables
      description: List of derived tables
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: List of objects
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/FlowOutput"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/export":
    get:
      summary: Flow / Export
      description: Export (download) flow as setting file (to be specified)
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/token"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Text/File? (YAML/JSON) (TODO. define format)
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/copy":
    post:
      summary: Flow copy
      description: Create Flow with copied Flow
      tags:
      - Flow
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      - "$ref": "#/parameters/FlowUpdate"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Flow+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/flows/{flowId}/process":
    get:
      summary: Flow / Process
      description: "..."
      tags:
      - Flow
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/flowId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables":
    get:
      summary: Table / List
      description: '...search by fields - "name", "column.name", "column.dataType".'
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListTable"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Table / Create (without dataset)
      description: "..."
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/TableCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/import/json":
    post:
      summary: Table / Import json
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/TableImportName"
      - "$ref": "#/parameters/UploadFile"
      - "$ref": "#/parameters/TableImportDescription"
      - "$ref": "#/parameters/assetImportInLibrary"
      consumes:
      - multipart/form-data
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/import/csv":
    post:
      summary: Table / Import csv
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/TableImportName"
      - "$ref": "#/parameters/UploadFile"
      - "$ref": "#/parameters/TableImportNullValue"
      - "$ref": "#/parameters/TableImportDelimiter"
      - "$ref": "#/parameters/TableImportDescription"
      - "$ref": "#/parameters/assetImportInLibrary"
      - in: formData
        name: 'columns'
        type: string
        format: json
        description: this should be a JSON representation of array of "#/definitions/TableColumn"
      consumes:
      - multipart/form-data
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}":
    get:
      summary: Table / View
      description: "..."
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Table / Update
      description: "..."
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/TableUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Table / Delete
      description: "..."
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/save":
    post:
      summary: Save Table To The Library
      description: Save Table To The Library
      tags:
      - Tables
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/TableSave"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/values":
    get:
      summary: List of specific column values
      description: "..."
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/columnName"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/limit"
      responses:
        '200':
          description: List of found column values
          schema:
            properties:
              data:
                type: array
                items:
                  type: string
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/process":
    get:
      summary: Table / Process
      description: "..."
      tags:
      - Table
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/data":
    get:
      summary: Table / Data / View
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Array of rows with arrays of values.  TODO. specify
          schema:
            "$ref": "#/definitions/ListDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/copy":
    post:
      summary: Table / Table copy
      description: Create table with copied dataset
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/TableCopy"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Table"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/export":
    get:
      summary: Table / Dataset Export
      description: Text/File? TODO. should be specified...
      tags:
      - Table
      parameters:
      - "$ref": "#/parameters/tableId"
      - "$ref": "#/parameters/token"
      - "$ref": "#/parameters/sharedResourceId"
      produces:
      - text/csv
      responses:
        '200':
          description: Object
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            type: string
  "/tables/{tableId}/stats":
    get:
      summary: Table Statistics
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/TableStatistic"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/stats/process":
    get:
      summary: Table Statistics / Process
      description: "..."
      tags:
      - Table
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models":
    get:
      summary: TabularModel / List
      description: '...search by fields - "name", etc.'
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}":
    get:
      summary: TabularModel / View
      description: "..."
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: TabularModel Object
          schema:
            "$ref": "#/definitions/TabularModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: TabularModel / Update
      description: "..."
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      - "$ref": "#/parameters/ModelUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/TabularModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: TabularModel / Delete
      description: "..."
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}/process":
    get:
      summary: TabularModel / Process
      description: "..."
      tags:
      - TabularModel
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}/train-summary":
    get:
      summary: TabularModel / Train process summary
      description: "..."
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ModelTrainSummary"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}/export":
    get:
      summary: TabularModel / Export
      description: Fetch download URL
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            description: download URL
            type: string
            format: url
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}/copy":
    post:
      summary: TabularModel copy
      description: Create TabularModel with copied data
      tags:
      - TabularModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/modelId"
      - "$ref": "#/parameters/ModelUpdate"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/TabularModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/models/{modelId}/save":
    post:
      summary: Save TabularModel To The Library
      description: Save TabularModel To The Library
      tags:
        - TabularModel
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/modelId"
        - "$ref": "#/parameters/ModelSave"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/TabularModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models":
    get:
      summary: CV Model / List
      description: '...search by fields - "name", etc.'
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListCVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/import":
    post:
      summary: Model / Import as file
      description: Import CV model, which was exported once before
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/assetImportName"
      - "$ref": "#/parameters/UploadFile"
      - "$ref": "#/parameters/assetImportInLibrary"
      consumes:
      - multipart/form-data
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}":
    get:
      summary: CV Model / View
      description: "..."
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Model Object
          schema:
            "$ref": "#/definitions/CVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: CV Model / Update
      description: "..."
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      - "$ref": "#/parameters/CVModelUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: CV Model / Delete
      description: "..."
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}/process":
    get:
      summary: CVModel / Process
      description: "..."
      tags:
      - CVModel
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}/export":
    get:
      summary: CVModel / Export
      description: Fetch download URL
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            description: download URL
            type: string
            format: url
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}/copy":
    post:
      summary: CVModel copy
      description: Create CVModel with copied data
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      - "$ref": "#/parameters/ModelUpdate"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}/save":
    post:
      summary: Save CVModel to the Library
      description: Save CVModel to the Library
      tags:
      - CVModel
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      - "$ref": "#/parameters/ModelSave"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVModel"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-models/{cvModelId}/state-file-url":
    get:
      summary: CV Model / State file URL
      description: Fetch URL to serialized model file
      tags:
      - CVModel
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvModelId"
      responses:
        '200':
          description: URL string
          schema:
            description: URL to serialized model file
            type: string
            format: url
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/predictions":
    get:
      summary: Prediction / List
      description: '...search by fields - "name", etc.'
      tags:
      - Prediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListPrediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Prediction / Create
      description: "..."
      tags:
      - Prediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/PredictionCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Prediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/predictions/{predictionId}":
    get:
      summary: Prediction / View
      description: "..."
      tags:
      - Prediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/predictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Prediction+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Prediction / Update
      description: "..."
      tags:
      - Prediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/predictionId"
      - "$ref": "#/parameters/PredictionUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Prediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Prediction / Delete
      description: Prediction / Delete
      tags:
      - Prediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/predictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/predictions/{predictionId}/process":
    get:
      summary: Prediction / Process
      description: "..."
      tags:
      - Prediction
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/predictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-predictions":
    get:
      summary: CV Prediction / List
      description: '...search by fields - "name", etc.'
      tags:
      - CVPrediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListCVPrediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: CV Prediction / Create
      description: "..."
      tags:
      - CVPrediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/CVPredictionCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVPrediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-predictions/{cvPredictionId}":
    get:
      summary: CV Prediction / View
      description: "..."
      tags:
      - CVPrediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvPredictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVPrediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: CVPrediction / Update
      description: "..."
      tags:
      - CVPrediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvPredictionId"
      - "$ref": "#/parameters/CVPredictionUpdate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/CVPrediction"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: CVPrediction / Delete
      description: Prediction / Delete
      tags:
      - CVPrediction
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvPredictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/cv-predictions/{cvPredictionId}/process":
    get:
      summary: CVPrediction / Process
      description: "..."
      tags:
      - CVPrediction
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/cvPredictionId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/processes":
    get:
      summary: List Of User's Jobs
      description: List Of User's Jobs
      tags:
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
        - $ref: "#/parameters/order"
        - $ref: "#/parameters/jobTypes"
        - $ref: "#/parameters/processStarted"
        - $ref: "#/parameters/processCompleted"
      responses:
        '200':
          description: Object
          schema:
            $ref: "#/definitions/ListProcess"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/processes/{processId}":
    get:
      summary: Process / View
      description: "..."
      tags:
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/processId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/processes/{processId}/cancel":
    post:
      summary: Process / View
      description: "..."
      tags:
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/processId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/projects":
    get:
      summary: Get list of Projects
      tags:
      - Project
      security:
      - Bearer: []
      responses:
        '200':
          description: Project List
          schema:
            "$ref": "#/definitions/ListProject"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Create a Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/ProjectCreate"
      responses:
        '200':
          description: Project Object
          schema:
            "$ref": "#/definitions/Project"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/projects/{projectId}":
    get:
      summary: Get Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      responses:
        '200':
          description: Extended Project Object
          schema:
            "$ref": "#/definitions/Project+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Update Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/ProjectUpdate"
      responses:
        '200':
          description: Extended Project Object
          schema:
            "$ref": "#/definitions/Project+"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/projects/{projectId}/folders":
    post:
      summary: Create a Project Folder
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/ProjectFolderCreate"
      responses:
        '200':
          description: Project Folder Object
          schema:
            "$ref": "#/definitions/ProjectFolder"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/projects/{projectId}/folders/{folderId}":
    get:
      summary: Get a Project Folder
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/folderId"
      responses:
        '200':
          description: Project Folder Object
          schema:
            "$ref": "#/definitions/ProjectFolder"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete a Project Folder
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/folderId"
      responses:
        '200':
          description: Project Folder Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/projects/{projectId}/{projectAssetType}/{projectAssetId}":
    put:
      summary: Add Asset link to the Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/projectAssetType"
      - "$ref": "#/parameters/projectAssetId"
      - "$ref": "#/parameters/ProjectAssetLink"
      responses:
        '200':
          description: Project Object ID
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete Asset link from the Project
      tags:
      - Project
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/projectId"
      - "$ref": "#/parameters/projectAssetType"
      - "$ref": "#/parameters/projectAssetId"
      responses:
        '200':
          description: Project Object ID
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me":
    get:
      summary: Me / View
      description: Validate token and retrive user profile
      tags:
      - Me
      security:
      - Bearer: []
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Me / Update
      description: Update user profile
      tags:
      - Me
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/Me"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/stats":
    get:
      summary: Me / View
      description: General environment information such as "user space used"
      tags:
      - Me
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/scope"
      responses:
        '200':
          description: Object
          schema:
            type: object
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/flows":
    get:
      summary: Me / Flows
      description: "..."
      tags:
      - Me
      security:
      - Bearer: []
      responses:
        '200':
          description: Object
          schema:
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/Flow"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/shares":
    get:
      summary: List Of incoming SharedResource objects
      description: List Of SharedResources
      tags:
      - Share
      - Me
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: List of SharedResource
          schema:
            "$ref": "#/definitions/ListSharedResource"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/notifications":
    get:
      summary: Me / Notifications
      description: "..."
      tags:
      - Me
      security:
      - Bearer: []
      responses:
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/password":
    post:
      summary: Me / Set password
      description: "..."
      tags:
      - Me
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/SetPassword"
      responses:
        '200':
          description: OK
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/password/reset":
    post:
      summary: Me / Reset password step 1
      description: "..."
      tags:
      - Me
      parameters:
      - "$ref": "#/parameters/ResetPasswordRequest"
      responses:
        '202':
          description: OK
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/password/resetcomplete":
    post:
      summary: Me / Reset password step 2
      description: "..."
      tags:
      - Me
      parameters:
      - "$ref": "#/parameters/ResetPasswordComplete"
      responses:
        '200':
          description: OK
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/me/username/remind":
    post:
      summary: Me / Set password
      description: "..."
      tags:
      - Me
      parameters:
      - "$ref": "#/parameters/RemindUsernameRequest"
      responses:
        '202':
          description: OK
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/replays":
    get:
      summary: List Of FlowReplays
      description: List Of FlowReplays
      tags:
      - Replay
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of FlowReplays
          schema:
            "$ref": "#/definitions/ListFlowReplay"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Plays flow
      description: Plays Flow
      tags:
      - Replay
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/FlowReplayCreate"
      responses:
        '200':
          description: Play Flow
          schema:
            "$ref": "#/definitions/FlowReplay"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/replays/{replayId}":
    get:
      summary: Replay
      description: Replays
      tags:
      - Replay
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/replayId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/FlowReplay"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Replay / Delete
      description: Delete Replay
      tags:
      - Replay
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/replayId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/replays/{replayId}/process":
    get:
      summary: Replay / Process
      description: "..."
      tags:
      - Replay
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/replayId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/shares":
    get:
      summary: List Of SharedResource objects
      description: List Of SharedResources
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/sharedResourceAssetType"
      - "$ref": "#/parameters/sharedResourceAssetId"
      responses:
        '200':
          description: List of SharedResource
          schema:
            "$ref": "#/definitions/ListSharedResource"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Creates a Shared Resource
      description: Creates a Shared Resource
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/SharedResourceCreate"
      responses:
        '200':
          description: SharedResource
          schema:
            "$ref": "#/definitions/SharedResource"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/shares/{shareId}":
    get:
      summary: SharedResource
      description: SharedResource
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/shareId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/SharedResource"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: SharedResource / Delete
      description: Delete SharedResource
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/shareId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/shares/{shareId}/owner":
    get:
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/shareId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/shares/{shareId}/recipient":
    get:
      tags:
      - Share
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/shareId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/dashboards":
    get:
      summary: List Of Dashboard objects
      description: List Of Dashboards
      security:
      - Bearer: []
      tags:
      - Dashboard
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/search"
      responses:
        '200':
          description: List of Dashboards
          schema:
            "$ref": "#/definitions/ListDashboard"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Creates a Dashboard
      description: Creates a Dashboard
      tags:
      - Dashboard
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/DashboardCreate"
      responses:
        '200':
          description: Dashboard
          schema:
            "$ref": "#/definitions/Dashboard"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/dashboards/{dashboardId}":
    get:
      summary: Get Dashboard
      description: Dashboard
      tags:
      - Dashboard
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/dashboardId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Dashboard"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Update a Dashboard
      description: Updates Dashboard
      tags:
      - Dashboard
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/dashboardId"
      - "$ref": "#/parameters/DashboardCreate"
      responses:
        '200':
          description: Dashboard
          schema:
            "$ref": "#/definitions/Dashboard"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Dashboard / Delete
      description: Deletes Dashboard
      tags:
      - Dashboard
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/dashboardId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/signin":
    post:
      summary: Signin
      description: "..."
      tags:
      - Me
      parameters:
      - "$ref": "#/parameters/Signin"
      responses:
        '200':
          description: Token
          schema:
            "$ref": "#/definitions/Token"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/signout":
    post:
      summary: Signout
      description: "..."
      tags:
      - Me
      - New
      security:
      - Bearer: []
      responses:
        '200':
          description: OK
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/signup":
    post:
      summary: Signup
      description: "..."
      tags:
      - Me
      parameters:
      - "$ref": "#/parameters/Signup"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/emailconfirmation":
      post:
        summary: email confirmation to activate registered user
        description: "..."
        parameters:
        - "$ref": "#/parameters/EmailConfirmationRequest"
        responses:
          '202':
            description: OK
          default:
            description: Unexpected error
            schema:
              "$ref": "#/definitions/Error"
  "/optimizations":
    get:
      summary: Optimization / List
      description: "..."
      tags:
      - Optimization
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListOptimization"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Optimization / Create
      description: "..."
      tags:
      - Optimization
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OptimizationCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Optimization"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/optimizations/{optimizationId}":
    get:
      summary: Optimization / View
      description: "..."
      tags:
      - Optimization
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/optimizationId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Optimization"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Optimization / Update
      description: "..."
      tags:
      - Optimization
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OptimizationUpdate"
      - "$ref": "#/parameters/optimizationId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Optimization"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Optimization / Delete
      description: "..."
      tags:
      - Optimization
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/optimizationId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/optimizations/{optimizationId}/process":
    get:
      summary: OPTIMIZATION / Process
      description: "..."
      tags:
      - Optimization
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/optimizationId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/tables/{tableId}/scatter-summary":
    get:
      summary: Scatter Summary
      description: Dots for visualizing scatter matrix
      tags:
      - Table
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/tableId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ScatterSummary"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/diaas":
    get:
      summary: DIAAS / List
      description: "..."
      tags:
      - DIAA
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListDIAA"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: DIAA / Create
      description: "..."
      tags:
      - DIAA
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/DIAACreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/DIAA"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/diaas/{diaaId}":
    get:
      summary: DIIA / View
      description: "..."
      tags:
      - DIAA
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/diaaId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/DIAA"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: DIAA / Update
      description: "..."
      tags:
      - DIAA
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/DIAAUpdate"
      - "$ref": "#/parameters/diaaId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/DIAA"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: DIAA / Delete
      description: "..."
      tags:
      - DIAA
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/diaaId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/diaas/{diaaId}/process":
    get:
      summary: DIAA / Process
      description: "..."
      tags:
      - DIAA
      - Process
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/diaaId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/s3buckets":
    get:
      summary: S3 Buckets / List
      description: "..."
      tags:
      - New
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/S3BucketInfoList"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/online-jobs":
    get:
      summary: Online Job / List
      description: "..."
      tags:
      - ONLINE_JOB
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/OnlineJobList"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Online Job / Create
      description: "..."
      tags:
      - ONLINE_JOB
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OnlineJobCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineJob"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/online-jobs/{onlineJobId}":
    get:
      summary: Online Job / View
      description: "..."
      tags:
      - ONLINE_JOB
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/onlineJobId"
      - "$ref": "#/parameters/sharedResourceId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineJob"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Online Job / Update
      description: "..."
      tags:
      - ONLINE_JOB
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OnlineJobUpdate"
      - "$ref": "#/parameters/onlineJobId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineJob"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Online Job / Delete
      description: "..."
      tags:
      - ONLINE_JOB
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/onlineJobId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/online-apis":
    get:
      summary: Online API / List
      description: "..."
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListOnlineAPI"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Online API / Create
      description: "..."
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OnlineAPICreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineAPI"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/online-apis/{onlineAPIId}":
    get:
      summary: Online API / View
      description: "..."
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/onlineAPIId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineAPI"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Online API / Update
      description: "..."
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/OnlineAPIUpdate"
      - "$ref": "#/parameters/onlineAPIId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/OnlineAPI"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Online API / Delete
      description: "..."
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/onlineAPIId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/api-call/{onlineAPIId}/predict":
    post:
      tags:
      - API
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/onlineAPIId"
      - "$ref": "#/parameters/OnlineAPIPredictRequest"
      responses:
        '200':
          description: Predicted response
          schema:
            "$ref": "#/definitions/OnlineAPIPredictResponse"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/script-deployments":
    get:
      summary: Script Deployment / List
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/page"
        - "$ref": "#/parameters/page_size"
        - "$ref": "#/parameters/order"
        - "$ref": "#/parameters/scope"
        - "$ref": "#/parameters/search"
        - "$ref": "#/parameters/assetProjectId"
        - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListScriptDeployment"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Script Deployment / Create
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/ScriptDeploymentCreate"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ScriptDeployment"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/script-deployments/{scriptDeploymentId}":
    get:
      summary: Script Deployment / View
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/scriptDeploymentId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ScriptDeployment"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Script Deployment / Update
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/ScriptDeploymentUpdate"
        - "$ref": "#/parameters/scriptDeploymentId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ScriptDeployment"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Script Deployment / Delete
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/scriptDeploymentId"
      responses:
        '200':
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/script-deployments/{scriptDeploymentId}/download":
    get:
      summary: Script Deployment / Download
      description: "..."
      tags:
        - Deploy
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/scriptDeploymentId"
      responses:
        '200':
          description: Object
          schema:
            description: download URL
            type: string
            format: url
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/cv-data-augmentation-defaults":
    get:
      tags:
      - New
      responses:
        '200':
          description: Defaults data
          schema:
            type: array
            items:
              "$ref": "#/definitions/AlbumAugmentationStep"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/aws-regions":
    get:
      tags:
      - New
      responses:
        '200':
          description: Available AWS regions
          schema:
            type: array
            items:
              type: string
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/cv-architectures":
    get:
      tags:
        - CVArchitecture
        - New
      responses:
        "200":
          description: List of available architecture types
          schema:
            type: array
            items:
              "$ref": "#/definitions/CvArchitecture"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/cv-classifiers":
    get:
      tags:
        - CVArchitecture
        - New
      responses:
        "200":
          description: List of available classifiers
          schema:
            type: array
            items:
              "$ref": "#/definitions/CvClassifier"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/cv-detectors":
    get:
      tags:
        - CVArchitecture
        - New
      responses:
        "200":
          description: List of available detectors
          schema:
            type: array
            items:
              "$ref": "#/definitions/CvDetector"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/cv-decoders":
    get:
      tags:
        - CVArchitecture
        - New
      responses:
        "200":
          description: List of available decoders
          schema:
            type: array
            items:
              "$ref": "#/definitions/CvDecoder"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/config/operator-categories":
    get:
      tags:
      - New
      responses:
        "200":
          description: List of available operator categories
          schema:
            type: array
            items:
              "$ref": "#/definitions/OperatorCategory"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"

  "/users":
    get:
      summary: Users / List
      description: ...search by fields - "firstName" and "lastName", etc.
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
      - $ref: "#/parameters/page"
      - $ref: "#/parameters/page_size"
      - $ref: "#/parameters/order"
      - in: query
        type: string
        name: firstName
        required: false
        description: User's first name
      - in: query
        type: string
        name: lastName
        required: false
        description: User's last name
      responses:
        "200":
          description: List of objects
          schema:
            $ref: "#/definitions/ListUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Users / Create
      description: Create a new User
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/UserCreateRequest"
      responses:
        "200":
          description: Success. User was created
          schema:
            $ref: "#/definitions/UMUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  "/users/{userId}":
    get:
      summary: Users / View
      description: Get User
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/userId"
      responses:
        "200":
          description: Model object
          schema:
            $ref: "#/definitions/UMUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: Users / Update
      description: Update model object
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/UserUpdateRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UMUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Users / Delete
      description: Delete model object
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/userId"
        - in: query
          name: transferOwnershipTo
          description: User ID to transfer ownership to
          type: string
          required: false
      responses:
        "200":
          description: Success. Object has been deleted
          schema:
            $ref: "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  "/users/{userId}/activate":
    post:
      summary: Users / Activate User
      description: Activate User
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/userId"
      responses:
        "200":
          description: Success. User has been activated
          schema:
            $ref: "#/definitions/UMUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  "/users/{userId}/deactivate":
    post:
      summary: Users / Deactivate User
      description: Deactivate User
      tags:
        - User
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/userId"
      responses:
        "200":
          description: Success. User has been deactivated
          schema:
            $ref: "#/definitions/UMUser"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  "/pipelines":
    get:
      summary: Pipeline / List
      description: "List of Pipelines"
      tags:
      - Pipeline
      - New
      security:
        - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListPipeline"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Pipeline / Create
      description: Create a new Pipeline
      tags:
        - Pipeline
        - New
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/PipelineCreateRequest"
      responses:
        "200":
          description: Success. Pipeline was created
          schema:
            $ref: "#/definitions/Pipeline"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/pipelines/{pipelineId}":
    get:
      summary: Pipeline / View
      description: Get Pipeline
      tags:
        - Pipeline
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/pipelineId"
      responses:
        '200':
          description: PipelineOpertor Object
          schema:
            "$ref": "#/definitions/Pipeline"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Pipeline / Update
      description: Update Pipeline
      tags:
        - Pipeline
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/pipelineId"
        - "$ref": "#/parameters/PipelineUpdateRequest"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Pipeline"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Pipeline / Delete
      description: Delete pipeline object
      tags:
        - Pipeline
        - New
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/pipelineId"
      responses:
        '200':
          description: Success. Pipeline has been deleted
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/pipeline-operators":
    get:
      summary: Pipeline Operator / List
      description: Get Pipeline Operator
      tags:
      - PipelineOperator
      - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/moduleName"
      - "$ref": "#/parameters/className"
      - "$ref": "#/parameters/packageName"
      - "$ref": "#/parameters/packageVersion"
      responses:
        '200':
          description: List of objects
          schema:
            "$ref": "#/definitions/ListPipelineOperator"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/pipeline-operators/{pipelineOperatorId}":
    get:
      summary: PipelineOperator/ View
      description: Get Pipeline operators
      tags:
        - PipelineOperator
        - New
      security:
      - Bearer: []
      parameters:
      - "$ref": "#/parameters/pipelineOperatorId"
      responses:
        '200':
          description: PipelineOpertor Object
          schema:
            "$ref": "#/definitions/PipelineOperator"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets":
    get:
      summary: Datasets / List
      description: List Binary Datasets
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/page_size"
      - "$ref": "#/parameters/order"
      - "$ref": "#/parameters/scope"
      - "$ref": "#/parameters/search"
      - "$ref": "#/parameters/assetProjectId"
      - "$ref": "#/parameters/assetFolderId"
      responses:
        "200":
          description: List of objects
          schema:
            "$ref": "#/definitions/ListBinaryDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Dataset / Create
      description: Create a Binary Dataset
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/BinaryDatasetCreate"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/BinaryDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}":
    get:
      summary: Dataset / View
      description: Get Binary Dataset object
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/sharedResourceId"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/BinaryDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    put:
      summary: Dataset / Update
      description: Update Binary Dataset
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/BinaryDatasetUpdate"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/BinaryDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Dataset / Delete
      description: Delete Binary Dataset
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/ID"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/ls":
    get:
      summary: Dataset / List Files
      description: List files that belong to Binary Dataset
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/page"
        - "$ref": "#/parameters/page_size"
        - "$ref": "#/parameters/order"
        - "$ref": "#/parameters/search"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/ListBinaryDatasetFiles"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/download":
    get:
      summary: Dataset / Download all files
      description: Download all Binary Dataset files as TAR archive
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
      responses:
        "200":
          description: Object
          schema:
            type: file
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    post:
      summary: Dataset / Download Selected Files (JSON payload)
      description: Download selected files as TAR archive
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - in: body
          name: files
          required: true
          description: List of files to download
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Object
          schema:
            type: file
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/download/":
    post:
      summary: Dataset / Download Selected Files (form payload)
      description: Download selected files as TAR archive
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/datasetDownloadFileNames"
      responses:
        "200":
          description: Object
          schema:
            type: file
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/files/{datasetFileName}":
    get:
      summary: Dataset / File Info
      description: Get Binary Dataset file information
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/datasetFileName"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/BinaryDatasetFile"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Dataset / Delete File
      description: Delete Binary Dataset file
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/datasetFileName"
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/files":
    post:
      summary: Dataset / Upload Files
      description: Upload a Binary Dataset files
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/UploadFile"
      consumes:
        - multipart/form-data
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/import":
    post:
      summary: Dataset / Import From S3
      description: Import files into Binary Dataset from S3
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/BinaryDatasetImportS3"
      responses:
        "202":
          description: Object
          schema:
            "$ref": "#/definitions/BinaryDataset"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/export":
    post:
      summary: Dataset / Export to S3
      description: Export Binary Dataset files to S3
      tags:
        - New
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
        - "$ref": "#/parameters/BinaryDatasetExportS3"
      responses:
        "202":
          description: Success
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
  "/datasets/{datasetId}/process":
    get:
      summary: Dataset / Process
      description: Get Binary Dataset process info
      tags:
        - New
        - Process
        - Dataset
      security:
        - Bearer: []
      parameters:
        - "$ref": "#/parameters/datasetId"
      responses:
        "200":
          description: Object
          schema:
            "$ref": "#/definitions/Process"
        default:
          description: Unexpected error
          schema:
            "$ref": "#/definitions/Error"
parameters:
  token:
    name: access_token
    in: query
    description: Token can be passed in query params for specific cases (such as download
      endpoints)
    required: false
    type: string
  page:
    name: page
    in: query
    description: Page number for paginated lists
    required: false
    type: integer
    format: int32
  page_size:
    name: page_size
    in: query
    description: Page number for paginated lists (maybe pageSize?)
    required: false
    type: integer
    format: int32
  order:
    name: order
    in: query
    description: order for lists (ex. '-name')
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
  jobTypes:
    name: jobTypes
    in: query
    description: a list of job types to filter with (refer to JobType for details)
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
  processStarted:
    name: processStarted
    in: query
    description: job start date-time range. Contains 2 values representing selected day start and the following day start in a user's timezone.
    required: false
    type: array
    minItems: 2
    maxItems: 2
    collectionFormat: csv
    items:
      type: string
  processCompleted:
    name: processCompleted
    in: query
    description: job completion date-time range. Contains 2 values representing selected day start and the following day start in a user's timezone.
    required: false
    type: array
    minItems: 2
    maxItems: 2
    collectionFormat: csv
    items:
      type: string
  search:
    name: search
    in: query
    description: Search for lists (ex. 'phrase...')
    required: false
    type: string
  assetProjectId:
    name: projectId
    in: query
    description: filter by project
    required: false
    type: string
  assetFolderId:
    name: folderId
    in: query
    description: filter by folder
    required: false
    type: string
  assetImportInLibrary:
    name: inLibrary
    in: formData
    description: Save imported asset to library
    required: false
    type: boolean
  scope:
    name: scope
    in: query
    description: Library scope for lists
    required: false
    type: string
    enum:
    - personal
    - corporate
    - shared
    - recent
  filename:
    name: filename
    in: formData
    description: Name for uploaded file
    required: true
    type: string
  TableImportName:
    name: name
    in: formData
    description: Name for uploaded file
    required: false
    type: string
  TableImportDescription:
    name: description
    in: formData
    required: false
    type: string
  assetImportName:
    name: name
    in: formData
    description: Name of the asset, which is imported by file
    required: false
    type: string
  shareId:
    name: shareId
    in: path
    description: Shared resource Id
    required: true
    type: string
  albumId:
    name: albumId
    in: path
    description: Album ID
    required: true
    type: string
  albumLabelsFilter:
    name: labels
    in: query
    description: Search for labels
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
  pictureAugmentationFilter:
    name: augmentations
    in: query
    description: Search for DA type, see "#/definitions/AlbumAugmentationType"
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
  diaaId:
    name: diaaId
    in: path
    description: DIAA ID
    required: true
    type: string
  onlineJobId:
    name: onlineJobId
    in: path
    description: Online Job ID
    required: true
    type: string
  onlineAPIId:
    name: onlineAPIId
    in: path
    description: Online API ID
    required: true
    type: string
  scriptDeploymentId:
    name: scriptDeploymentId
    in: path
    description: Script Deployment ID
    required: true
    type: string
  dashboardId:
    name: dashboardId
    in: path
    description: DIAA ID
    required: true
    type: string
  pictureId:
    name: pictureId
    in: path
    description: Album ID
    required: true
    type: string
  stepId:
    name: stepId
    in: path
    description: Step object ID
    required: true
    type: string
  flowId:
    name: flowId
    in: path
    description: Flow object ID
    required: true
    type: string
  modelId:
    name: modelId
    in: path
    description: Model object ID
    required: true
    type: string
  cvModelId:
    name: cvModelId
    in: path
    description: CVModel object ID
    required: true
    type: string
  experimentId:
    name: experimentId
    in: path
    description: Experiment object Id
    required: true
    type: string
  projectId:
    name: projectId
    in: path
    description: project object ID
    required: true
    type: string
  folderId:
    name: folderId
    in: path
    description: project folder ID
    required: true
    type: string
  pipelineOperatorId:
    name: pipelineOperatorId
    in: path
    description: pipelineOperator object ID
    required: true
    type: string
  pipelineId:
    name: pipelineId
    in: path
    description: pipeline object ID
    required: true
    type: string
  projectAssetType:
    name: projectAssetType
    in: path
    description: project asset type
    required: true
    type: string
    enum:
    - flows
    - tables
    - models
    - predictions
    - replays
    - table-stats
    - albums
    - pictures
    - cv-models
    - cv-predictions
    - dashboards
    - optimizations
    - diaas
    - online-jobs
    - datasets
  projectAssetId:
    name: projectAssetId
    in: path
    description: project asset object ID
    required: true
    type: string
  processId:
    name: processId
    in: path
    description: Process object ID
    required: true
    type: string
  predictionId:
    name: predictionId
    in: path
    description: prediction object ID
    required: true
    type: string
  replayId:
    name: replayId
    in: path
    description: Replay object ID
    required: true
    type: string
  optimizationId:
    name: optimizationId
    in: path
    description: Optimization ID
    required: true
    type: string
  cvPredictionId:
    name: cvPredictionId
    in: path
    description: cv prediction object ID
    required: true
    type: string
  tableId:
    name: tableId
    in: path
    description: Table object ID
    required: true
    type: string
  columnName:
    name: column_name
    in: query
    description: Column Name
    required: true
    type: string
  limit:
    name: limit
    in: query
    description: Limit of returned rows
    required: false
    type: string
  sharedResourceId:
    name: shared_resource_id
    in: query
    description: Get item by shared resource link, might be not needed
    required: false
    type: string
  sharedResourceAssetType:
    name: asset_type
    in: query
    description: For filtering Shared resources
    required: false
    type: string
    enum:
    - table
    - flow
    - model
  sharedResourceAssetId:
    name: asset_id
    in: query
    description: For filtering Shared resources
    required: false
    type: string
  Signin:
    name: signin
    in: body
    required: true
    schema:
      properties:
        username:
          type: string
        password:
          type: string
          format: password
  Signup:
    name: signup
    in: body
    required: true
    schema:
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        firstName:
          type: string
        lastName:
          type: string
  SetPassword:
    name: setPassword
    in: body
    required: true
    schema:
      properties:
        oldPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
  ResetPasswordRequest:
    name: resetPassword
    in: body
    required: true
    schema:
      properties:
        email:
          type: string
          format: email
  ResetPasswordComplete:
    name: resetPasswordComplete
    in: body
    required: true
    schema:
      properties:
        email:
          type: string
          format: email
        secretCode:
          type: string
        newPassword:
          type: string
          format: password
  RemindUsernameRequest:
    name: remindUsername
    in: body
    required: true
    schema:
      properties:
        email:
          type: string
          format: email
  Me:
    name: me
    in: body
    required: false
    schema:
      properties:
        email:
          type: string
        password:
          type: string
          format: password
        password2:
          type: string
          format: password
          description: Password confirmation
        firstName:
          type: string
        lastName:
          type: string
  AlbumSave:
    name: AlbumSave
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
      required:
      - name
  AlbumCreate:
    name: AlbumCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        labelMode:
          "$ref": "#/definitions/AlbumLabelType"
        copyPicturesFrom:
          description: album Ids, label mode of them should match labelMode provided
          type: array
          items:
            type: string
        copyOnlyLabelledPictures:
          type: boolean
        inLibrary:
          type: boolean
      required:
      - labelMode
  AlbumUpdate:
    name: AlbumUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        labelMode:
          "$ref": "#/definitions/AlbumLabelType"
      required:
      - name
      - labelMode
  AddPictures:
    name: AddPictures
    in: body
    required: true
    schema:
      properties:
        pictureMetaList:
          type: array
          items:
            "$ref": "#/definitions/PictureMeta"
        keepExisting:
          type: boolean
      required:
      - pictureMetaList
      - keepExisting
  AlbumCopy:
    name: AlbumCopy
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        copyOnlyLabelledPictures:
          type: boolean
        pictureIds:
          type: array
          items:
            type: string
        inLibrary:
          type: boolean
  AlbumAugment:
    name: AlbumAugment
    in: body
    required: true
    schema:
      properties:
        outputName:
          type: string
        includeOriginalPictures:
          type: boolean
        augmentations:
          type: array
          items:
            "$ref": "#/definitions/AlbumAugmentationStep"
          minItems: 1
        bloatFactor:
          type: number
        outputInLibrary:
          type: boolean
      required:
      - includeOriginalPictures
      - augmentations
      - bloatFactor
  TableImportDelimiter:
    in: formData
    name: delimiter
    required: false
    type: string
  UploadFile:
    in: formData
    name: file
    required: true
    type: file
  TableImportNullValue:
    in: formData
    name: nullValue
    description: Name for uploaded file
    required: false
    type: string
  UploadLabelsFile:
    in: formData
    name: file
    required: true
    type: file
  importLabelsFromS3:
    in: body
    name: importLabelsFromS3
    required: true
    schema:
      allOf:
      - "$ref": "#/definitions/S3BucketReference"
      - type: object
        properties:
          S3CSVPath:
            type: string
          applyLogTransformation:
            description: apply logarithmic transformation to images
            type: boolean
  importVideoFromS3:
    in: body
    name: importVideoFromS3
    required: true
    schema:
      allOf:
      - "$ref": "#/definitions/S3BucketReference"
      - type: object
        properties:
          S3VideoPath:
            type: string
          frameRateDivider:
            type: integer
            description: Take each Nth frame
            format: int32
        required:
        - S3VideoPath
  importPicturesFromS3:
    in: body
    name: importImagesFromS3
    required: true
    schema:
      allOf:
      - "$ref": "#/definitions/S3BucketReference"
      - type: object
        properties:
          S3ImagesPath:
            type: string
          S3CSVPath:
            type: string
        required:
        - S3ImagesPath
  ImportFromS3UploadLabelsFile:
    in: formData
    name: file
    required: false
    type: file
  ImportFromS3AWSS3BucketId:
    in: formData
    name: AWSS3BucketId
    required: false
    type: string
  ImportFromS3AWSRegion:
    in: formData
    name: AWSRegion
    required: true
    type: string
  ImportFromS3AWSS3BucketName:
    in: formData
    name: AWSS3BucketName
    required: false
    type: string
  ImportFromS3AWSAccessKey:
    in: formData
    name: AWSAccessKey
    required: false
    type: string
  ImportFromS3AWSSecretKey:
    in: formData
    name: AWSSecretKey
    required: false
    type: string
  ImportFromS3AWSSessionToken:
    in: formData
    name: AWSSessionToken
    required: false
    type: string
  ImportFromS3ImagesPath:
    in: formData
    name: S3ImagesPath
    required: true
    type: string
  ImportFromS3CSVPath:
    in: formData
    name: S3CSVPath
    required: false
    type: string
  applyLogTransformation:
    description: apply logarithmic transformation to images. Boolean value is represented as a string because we use multipart/form-data as a transport format
    in: formData
    name: applyLogTransformation
    type: string
    enum:
      - true
      - false
  PictureUpdate:
    name: PictureUpdate
    in: body
    required: true
    schema:
      properties:
        caption:
          type: string
        tags:
          type: array
          items:
            "$ref": "#/definitions/PictureTag"
      required:
      - tags
  FlowCreate:
    name: flowCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
  FlowReplayCreate:
    name: FlowReplayCreate
    in: body
    required: true
    schema:
      properties:
        flowId:
          type: string
          description: Flow ID
        name:
          type: string
          description: FlowReplay name
        description:
          type: string
          description: FlowReplay description
        input:
          type: array
          items:
            type: string
            description: Table ID
        outputTableNames:
          type: array
          items:
            "$ref": "#/definitions/ReplayOutputName"
        columnMappings:
          type: array
          items:
            "$ref": "#/definitions/MappingPair"
  FlowUpdate:
    name: flowUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  FlowstepCreate:
    name: flowstepCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        type:
          type: string
        inputIDs:
          type: array
          items:
            type: string
            description: Table IDs
        outputName:
          type: string
          description: Table/album name
        transformer:
          "$ref": "#/definitions/Transformer"
      required:
      - input
      - name
      - outputName
  FlowstepUpdate:
    name: flowstepUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        input:
          type: array
          items:
            type: string
            description: Table ID
  TableSave:
    name: TableSave
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
  TableCreate:
    name: tableCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        inLibrary:
          type: boolean
  TableCopy:
    name: tableCopy
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        inLibrary:
          type: boolean
  TableUpdate:
    name: tableUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        columns:
          type: array
          items:
            "$ref": "#/definitions/TableColumnUpdate"
  ModelUpdate:
    name: modelUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  ModelSave:
    name: modelSave
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
  ExperimentCreate:
    name: ExperimentCreate
    description: Experiment object to be sent when a user creates Experiment
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        type:
          "$ref": "#/definitions/ExperimentType"
        pipeline:
          "$ref": "#/definitions/ExperimentPipeline"
      required:
      - pipeline
      - type
  CVModelUpdate:
    name: modelUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
  ExperimentUpdate:
    name: experimentUpdate
    in: body
    required: true
    schema:
      properties:
        description:
          type: string
        name:
          type: string
  PredictionCreate:
    name: PredictionCreate
    in: body
    required: true
    schema:
      properties:
        modelId:
          type: string
          description: Model ID
        name:
          type: string
        description:
          type: string
        input:
          type: string
          description: Table ID
        outputTableName:
          type: string
          description: Output able name
        columnMappings:
          type: array
          items:
            "$ref": "#/definitions/SimpleMappingPair"
      required:
      - modelId
      - input
  PredictionUpdate:
    name: predictionUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  CVPredictionCreate:
    name: CVPredictionCreate
    in: body
    required: true
    schema:
      properties:
        modelId:
          type: string
          description: CV Model ID
        name:
          type: string
        description:
          type: string
        input:
          type: string
          description: Album ID
        outputAlbumName:
          type: string
          description: Output able name
        evaluate:
          type: boolean
        options:
          type: object
          properties:
            loi:
              type: array
              items:
                "$ref": "#/definitions/LabelOfInterest"
            defaultVisualThreshold:
              type: number
              format: double
          required:
            - defaultVisualThreshold
      required:
      - modelId
      - input
  CVPredictionUpdate:
    name: CVPredictionUpdate
    in: body
    required: false
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  ProjectCreate:
    name: projectCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  ProjectUpdate:
    name: projectUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  ProjectFolderCreate:
    name: ProjectFolderCreate
    description: Project Folder creation params
    in: body
    required: true
    schema:
      properties:
        path:
          type: string
      required:
      - path
  ProjectAssetLink:
    name: ProjectAssetLink
    description: Project Asset link parameters
    in: body
    required: true
    schema:
      properties:
        folderId:
          type: string
  SharedResourceCreate:
    name: SharedResourceCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        recipientId:
          type: string
          description: Shared resource recipient id
        recipientEmail:
          type: string
          description: Shared resource recipient email
        assetType:
          type: string
          description: Shared Resource Asset Type
          enum:
          - table
          - flow
          - model
        assetId:
          type: string
          description: Shared Resource Asset ID
      required:
      - assetType
      - assetId
  OptimizationCreate:
    name: OptimizationCreate
    in: body
    required: true
    schema:
      properties:
        modelId:
          type: string
        name:
          type: string
        description:
          type: string
        optimizationType:
          type: string
          enum:
          - PREDICTOR_TUNING
          - OBJECTIVE_FUNCTION
        outputModelName:
          type: string
        objectiveFlowId:
          type: string
        objectives:
          type: array
          items:
            "$ref": "#/definitions/OptimizationObjective"
        constraintFlowId:
          type: string
        optimizationConstraints:
          type: array
          items:
            "$ref": "#/definitions/OptimizationConstraint"
  OptimizationUpdate:
    name: OptimizationUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  DIAACreate:
    name: DIAACreate
    in: body
    required: true
    schema:
      properties:
        modelId:
          type: string
        name:
          type: string
        description:
          type: string
        outputModelName:
          type: string
        airSpecification:
          "$ref": "#/definitions/airSpecificationParameters"
        higherModelScoreFavorable:
          type: boolean
        diaaObjective:
          type: string
          enum:
          - AIR
          - SMD
        protectedGroupsColumnMapping:
          "$ref": "#/definitions/protectedGroupsColumnMapping"
  DIAAUpdate:
    name: DIAAUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  DashboardCreate:
    name: DashboardCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        widgets:
          type: array
          items:
            "$ref": "#/definitions/DashboardWidget"
        layout:
          type: object
        crossFilter:
          type: boolean
  OnlineJobCreate:
    name: OnlineJobCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        target:
          "$ref": "#/definitions/AssetReference"
        enabled:
          type: boolean
        options:
          "$ref": "#/definitions/OnlineJobCreateOptions"
      required:
      - target
      - options
  OnlineJobUpdate:
    name: OnlineJobUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
  OnlineAPICreate:
    name: OnlineAPICreate
    in: body
    required: true
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        target:
          "$ref": "#/definitions/AssetReference"
        secret:
          type: string
        enabled:
          type: boolean
      required:
      - name
      - target
      - secret
      - enabled
  OnlineAPIUpdate:
    name: OnlineAPIUpdate
    in: body
    required: true
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        secret:
          type: string
        enabled:
          type: boolean
  OnlineAPIPredictRequest:
    name: OnlineAPIPredictRequest
    in: body
    required: true
    schema:
      description: Prediction request data
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            additionalProperties:
              type:
              - string
              - integer
              - number
              - boolean
            minProperties: 1
            example:
              string: foo
              number: 12
      required:
      - data
  ScriptDeploymentCreate:
    name: ScriptDeploymentCreate
    in: body
    required: true
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        mode:
          "$ref": "#/definitions/ScriptDeploymentMode"
        hardwareMode:
          "$ref": "#/definitions/ScriptDeploymentHardwareMode"
        params:
          "$ref": "#/definitions/ScriptDeploymentParams"
      required:
        - name
        - mode
        - hardwareMode
        - params
  ScriptDeploymentUpdate:
    name: ScriptDeploymentUpdate
    in: body
    required: true
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
  S9ProjectId:
    name: projectId
    in: path
    description: __S9 Project__ object ID
    required: true
    type: string
  S9ProjectCreate:
    name: S9ProjectCreate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  S9ProjectUpdate:
    name: S9ProjectUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
  S9ProjectSessionCreate:
    name: S9ProjectSessionCreate
    in: body
    required: true
    schema:
      properties:
        useGPU:
          description: Defines whether the server should use GPU
          type: boolean
      required:
        - useGPU
  PackageBuild:
    name: PackageBuild
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
          description: Package name. Required only when __S9 Project__ hasn't been built before. Otherwise should be empty.
        version:
          type: string
          description: Package version
        description:
          type: string
          description: Package description
        analyzePipelineOperators:
          type: boolean
          description: Defines whether need to analyze Pipeline Operators
      required:
        - version
  PackagePublish:
    name: PackagePublish
    in: body
    required: true
    schema:
      properties:
        pipelineOperators:
          type: array
          items:
            $ref: "#/definitions/PipelineOperatorPublish"
      required:
        - pipelineOperators
  S9ProjectFilePath:
    name: filePath
    in: path
    description: File path to operate with
    required: true
    type: string
  packageId:
    name: packageId
    in: path
    type: string
    required: true
    description: __S9 Project Package__ ID
  userId:
    name: userId
    in: path
    description: User ID
    type: string
    required: true
  UserCreateRequest:
    name: UserCreateRequest
    in: body
    required: true
    schema:
      description: Create User request data
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/definitions/UserRole"
      required:
        - username
        - email
        - password
        - firstName
        - lastName
        - role
  UserUpdateRequest:
    name: UserUpdateRequest
    in: body
    required: true
    schema:
      description: Update User request data
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/definitions/UserRole"
  PipelineCreateRequest:
    name: Pipeline
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        steps:
          type: array
          items:
            $ref: "#/definitions/Pipeline_StepInfo"
        inLibrary:
          type: boolean
      required:
        - steps
  PipelineUpdateRequest:
    name: PipelineUpdate
    in: body
    required: true
    schema:
      properties:
        name:
          type: string
        description:
          type: string
        steps:
          type: array
          items:
            $ref: "#/definitions/Pipeline_StepInfo"
  datasetId:
    in: path
    name: datasetId
    type: string
    required: true
    description: Dataset ID
  datasetFileName:
    in: path
    name: datasetFileName
    type: string
    required: true
    description: Dataset file name. Please note that it may contain slashes
  datasetDownloadFileNames:
    in: formData
    name: files
    type: string
    required: true
    description: Dataset file names (JSON array of strings, for example ["File1.jpg","another/file.mpg"])
  BinaryDatasetCreate:
    in: body
    name: BinaryDatasetCreate
    required: true
    description: Dataset creation request
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
  BinaryDatasetUpdate:
    in: body
    name: BinaryDatasetUpdate
    required: true
    description: Dataset creation request
    schema:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
  BinaryDatasetImportS3:
    in: body
    name: BinaryDatasetImportS3
    required: true
    schema:
      type: object
      properties:
        from:
          type: object
          properties:
            s3Bucket:
              "$ref": "#/definitions/S3BucketReference"
            path:
              description: Directory path in S3 storage
              type: string
          required:
            - s3Bucket
            - path
  BinaryDatasetExportS3:
    in: body
    name: BinaryDatasetExportS3
    required: true
    schema:
      type: object
      properties:
        to:
          type: object
          properties:
            s3Bucket:
              "$ref": "#/definitions/S3BucketReference"
            path:
              description: Directory path in S3 storage
              type: string
          required:
            - s3Bucket
            - path
  EmailConfirmationRequest:
    in: body
    name: EmailConfirmationRequest
    required: true
    schema:
      type: object
      properties:
        orgId:
          description: Organization Id
          type: string
        userId:
          description: User Id
          type: string
        activationCode:
          description: Activation code
          type: string
      required:
        - orgId
        - userId
        - activationCode
  className:
    name: className
    in: query
    type: string
    required: false
  moduleName:
    name: moduleName
    in: query
    type: string
    required: false
  packageName:
    name: packageName
    in: query
    type: string
    required: false
  packageVersion:
    name: packageVersion
    description: "Represents version of the package in the format, Version format should follow semantic versioning scheme: Major.Minor.Patch.Suffix, eg: 1.10.0"
    in: query
    type: string
    required: false
definitions:
  Token:
    description: Token
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
        description: in seconds
        format: int32
      token_type:
        type: string
        description: optional
  User:
    description: User object
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      role:
        $ref: "#/definitions/UserRole"
  Flow:
    description: Flow object
    properties:
      id:
        type: string
      ownerId:
        type: string
      name:
        type: string
      description:
        type: string
      status:
        type: string
        description: Flow Status
        enum:
        - NEW
        - RUNNING
        - ERROR
        - PARTLY_DONE
        - DONE
        - DELETED
        - QUEUED
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
  PictureMeta:
    description: PictureMeta
    properties:
      filepath:
        type: string
      filename:
        type: string
      filesize:
        type: number
      caption:
        type: string
      tags:
        type: array
        items:
          "$ref": "#/definitions/PictureTag"
  AssetType:
    description: Asset type
    type: string
    enum:
    - FLOW
    - TABLE
    - MODEL
    - PREDICTION
    - REPLAY
    - DASHBOARD
    - ALBUM
    - CV_MODEL
    - CV_PREDICTION
    - OPTIMIZATION
    - DIAA
    - ONLINE_JOB
    - ONLINE_API
    - S9_PROJECT
    - PIPELINE
    - EXPERIMENT
    - DATASET
    - SCRIPT_DEPLOYMENT
  AbstractAsset:
    description: Asset common fields
    type: object
    properties:
      id:
        type: string
        description: Asset ID
      ownerId:
        type: string
        description: Asset owner ID
      name:
        type: string
        description: Asset Name
      description:
        type: string
        description: Asset Description
      created:
        type: string
        format: date-time
        description: Asset creation date-time
      updated:
        type: string
        format: date-time
        description: Date-time of the last asset update
      inLibrary:
        type: boolean
    required:
      - id
      - ownerId
      - name
      - created
      - updated
  AssetReference:
    description: Asset reference object
    properties:
      type:
        "$ref": "#/definitions/AssetType"
      id:
        type: string
        description: Asset ID
    required:
    - type
    - id
  Flow+:
    description: Flow object with Flowsteps
    allOf:
    - "$ref": "#/definitions/Flow"
    - type: object
      properties:
        tables:
          type: array
          items:
            type: string
        steps:
          type: array
          items:
            "$ref": "#/definitions/Flowstep"
  ClusteringCenter:
    description: Clustering Center
    type: array
    items:
      type: number
  ClusteringPoint:
    description: Clustering Point
    type: array
    items:
      type: number
  ClusteringResult:
    description: Clustering Result
    properties:
      centers:
        type: array
        items:
          "$ref": "#/definitions/ClusteringCenter"
      points:
        type: array
        items:
          "$ref": "#/definitions/ClusteringPoint"
  Flowstep:
    description: Flowstep object
    properties:
      id:
        type: string
      name:
        type: string
      input:
        type: array
        items:
          type: string
      output:
        type: string
        description: Table ID
      status:
        type: string
        description: Flowstep Statuses
        enum:
        - INCOMPLETE
        - NEW
        - RUNNING
        - ERROR
        - DONE
        - QUEUED
      transformer:
        "$ref": "#/definitions/Transformer"
      created:
        type: string
      updated:
        type: string
  Table:
    description: Table object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          datasetId:
            type: string
          status:
            type: string
            enum:
            - Saving
            - Active
            - Inactive
            - Error
          datasetType:
            type: string
            enum:
            - Source
            - Derived
  Table+:
    description: Table object with TableColumns
    allOf:
    - "$ref": "#/definitions/Table"
    - type: object
      properties:
        columns:
          type: array
          items:
            "$ref": "#/definitions/TableColumn"
  TableColumn:
    description: TableColumn object
    properties:
      name:
        type: string
      displayName:
        type: string
      dataType:
        "$ref": "#/definitions/TableColumnDataType"
      variableType:
        "$ref": "#/definitions/TableColumnVariableType"
      align:
        "$ref": "#/definitions/TableColumnAlign"
    required:
    - name
    - displayName
    - dataType
    - variableType
    - align
  TableColumnUpdate:
    description: TableColumn object
    properties:
      name:
        description: This is aa reference to column and not an updating field
        type: string
      displayName:
        type: string
      variableType:
        description: Only certain transitions are available, e.g. CONTINUOUS -> CATEGORICAL
          is OK, but not vice-versa
        "$ref": "#/definitions/TableColumnVariableType"
      align:
        "$ref": "#/definitions/TableColumnAlign"
    required:
    - name
  TableColumnDataType:
    type: string
    enum:
    - STRING
    - INTEGER
    - DOUBLE
    - BOOLEAN
    - TIMESTAMP
    - LONG
  TableColumnVariableType:
    type: string
    enum:
    - CONTINUOUS
    - CATEGORICAL
  TableColumnAlign:
    type: string
    enum:
    - LEFT
    - RIGHT
    - CENTER
  TableStatistic:
    description: Table Statistic Object
    properties:
      id:
        type: string
      status:
        type: string
        enum:
        - DONE
        - PENDING
        - ERROR
      stats:
        type: array
        items:
          "$ref": "#/definitions/TableColumnStatistic"
    required:
    - id
    - status
    - stats
  TableColumnStatistic:
    description: Table Column Statistic object
    properties:
      columnName:
        type: string
      min:
        type: number
        format: float
      max:
        type: number
        format: float
      avg:
        type: number
        format: float
      std:
        type: number
        format: float
      stdPopulation:
        type: number
        format: float
      median:
        type: number
        format: float
      uniqueCount:
        type: number
        format: integer
      mostFrequentValue:
        type: string
      histogram:
        type: array
        items:
          type: object
          properties:
            count:
              type: number
              format: integer
            value:
              type: string
            min:
              type: number
              format: float
            max:
              type: number
              format: float
          required:
          - count
    required:
    - columnName
  TabularModel:
    description: TabularModel object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            enum:
            - TRAINING
            - ACTIVE
            - ERROR
            - CANCELLED
          class:
            "$ref": "#/definitions/ModelClass"
          classes:
            type: array
            items:
              type: string
          responseColumn:
            "$ref": "#/definitions/ModelColumn"
          predictorColumns:
            type: array
            items:
              "$ref": "#/definitions/ModelColumn"
        required:
          - status
          - class
          - responseColumn
          - predictorColumns
  ModelClass:
    description: Model class enum
    type: string
    enum:
    - REGRESSION
    - BINARY_CLASSIFICATION
    - CLASSIFICATION
  Album:
    description: Pictures album object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            enum:
            - ACTIVE
            - ERROR
            - SAVING
            - UPLOADING
          type:
            type: string
            enum:
            - SOURCE
            - DERIVED
            - TRAINRESULTS
          locked:
            type: boolean
          labelMode:
            "$ref": "#/definitions/AlbumLabelType"
          video:
            "$ref": "#/definitions/AlbumVideo"
          originalAlbumId:
            description: ID of original album (e.g. before augmentation)
            type: string
          albumAugmentationTimeSpentSummary:
            "$ref": "#/definitions/AlbumAugmentationTimeSpentSummary"
  AlbumLabelType:
    type: string
    enum:
    - CLASSIFICATION
    - LOCALIZATION
  AlbumTagsSummary:
    description: Album tags summary
    type: array
    items:
      type: object
      properties:
        label:
          type: string
        count:
          type: integer
      required:
      - count
  AlbumVideo:
    description: Album Video file reference
    properties:
      filename:
        type: string
      filepath:
        type: string
      filesize:
        type: integer
    required:
    - filename
    - filepath
    - filesize
  Picture:
    description: Pictures album object
    properties:
      id:
        type: string
      albumId:
        type: string
      filename:
        type: string
      filepath:
        type: string
      filesize:
        type: integer
      caption:
        type: string
      tags:
        type: array
        items:
          "$ref": "#/definitions/PictureTag"
      predictedCaption:
        type: string
      predictedTags:
        type: array
        items:
          "$ref": "#/definitions/PicturePredictedTag"
      modelId:
        description: Model generated this picture
        type: string
      predictionsRendered:
        description: Shows if predicted tags are pre-rendered on the image
        type: boolean
      originalPictureId:
        description: ID of original picture (e.g. before augmentation)
      augmentationsApplied:
        type: array
        items:
          $ref: "#/definitions/PictureAugmentationApplied"
    required:
    - id
    - albumId
    - filename
    - filepath
    - tags
  PictureTag:
    description: Picture tag
    properties:
      label:
        type: string
      area:
        type: object
        properties:
          top:
            type: integer
          left:
            type: integer
          height:
            type: integer
          width:
            type: integer
    required:
    - label
    - area
  PicturePredictedTag:
    allOf:
    - "$ref": "#/definitions/PictureTag"
    - type: object
      properties:
        confidence:
          type: number
      required:
      - confidence
  CVModel:
    description: CV Model object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          featureExtractorModelId:
            type: string
            description: Feature Extractor ID
          classes:
            type: array
            items:
              type: string
          inLibrary:
            type: boolean
          modelType:
            "$ref": "#/definitions/CVModelType"
          status:
            "$ref": "#/definitions/CVModelStatus"
          experimentId:
            type: string
        required:
          - status
          - modelType
  AlbumAugmentationSummary:
    type: object
    description: DA summary information.
    properties:
      count:
        type: number
      augmentation:
        "$ref": "#/definitions/AlbumAugmentationStep"
  PipelineSpent:
    type: object
    properties:
      time:
        type: number
        format: int32
      description:
        type: string
    required:
    - time
    - description
  JobTimeSpentSummary:
    type: object
    description: Common Time Spent Summary for any job.
    properties:
      tasksQueuedTime:
        type: number
        format: int32
      totalJobTime:
        type: number
        format: int32
    required:
    - tasksQueuedTime
    - totalJobTime
  AlbumAugmentationTimeSpentSummary:
    allOf:
      - "$ref": "#/definitions/JobTimeSpentSummary"
      - type: object
    description: Album Time Spent summary information.
    properties:
      dataLoadingTime:
        type: number
        format: int32
      augmentationTime:
        type: number
        format: int32
    required:
    - dataLoadingTime
    - augmentationTime
  CVPredictionTimeSpentSummary:
    allOf:
    - "$ref": "#/definitions/JobTimeSpentSummary"
    - type: object
    description: Prediction Time Spent summary information.
    properties:
      dataLoadingTime:
        type: number
        format: int32
      pipelineDetails:
        type: array
        items:
          "$ref": "#/definitions/PipelineSpent"
      modelLoadingTime:
        type: number
        format: int32
      predictionTime:
        type: number
        format: int32
    required:
    - dataLoadingTime
    - pipelineDetails
    - modelLoadingTime
    - predictionTime
  CVModelTrainTimeSpentSummary:
    allOf:
    - "$ref": "#/definitions/JobTimeSpentSummary"
    - type: object
    description: CV Model Time Spent summary information.
    properties:
      dataLoadingTime:
        type: number
        format: int32
      pipelineDetails:
        type: array
        items:
          "$ref": "#/definitions/PipelineSpent"
      trainingTime:
        type: number
        format: int32
      initialPredictionTime:
        type: number
        format: int32
      modelSavingTime:
        type: number
        format: int32
    required:
    - dataLoadingTime
    - pipelineDetails
    - trainingTime
    - initialPredictionTime
    - modelSavingTime
  CVEvaluationTimeSpentSummary:
    allOf:
    - "$ref": "#/definitions/JobTimeSpentSummary"
    - type: object
    description: Evaluation Time Spent summary information.
    properties:
      dataLoadingTime:
        type: number
        format: int32
      pipelineDetails:
        type: array
        items:
          "$ref": "#/definitions/PipelineSpent"
      scoreTime:
        type: number
        format: int32
    required:
    - dataLoadingTime
    - pipelineDetails
    - scoreTime
  CVModelSummary:
    type: object
    description: CV Model summary information.
    properties:
      reconstructionLoss:
        type: number
      labels:
        type: array
        items:
          type: string
      confusionMatrix:
        type: array
        items:
          "$ref": "#/definitions/ConfusionMatrixRow"
      mAP:
        type: number
        format: float
    required:
    - labels
  ConfusionMatrixRow:
    type: object
    description: CV Model summary confusion matrix row.
    properties:
      actual:
        type: number
        format: int32
      predicted:
        type: number
        format: int32
      count:
        type: number
        format: int32
    required:
    - count
  CVPrediction:
    description: CV Prediction object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          modelId:
            type: string
          input:
            type: string
            description: Album ID
          output:
            type: string
            description: Album ID
          status:
            type: string
            enum:
            - INCOMPLETE
            - NEW
            - RUNNING
            - ERROR
            - DONE
          summary:
            "$ref": "#/definitions/CVModelSummary"
          probabilityPredictionTableId:
            type: string
            description: Table id
          predictionTimeSpentSummary:
            "$ref": "#/definitions/CVPredictionTimeSpentSummary"
          evaluationTimeSpentSummary:
            "$ref": "#/definitions/CVEvaluationTimeSpentSummary"
        required:
          - modelId
          - input
          - status
  ColumnRenaming:
    properties:
      name:
        type: string
      value:
        type: string
  JoinSelectedColumn:
    properties:
      colName:
        type: string
      newColumnName:
        type: string
      tableReferrer:
        type: string
        enum:
        - Left
        - Right
  GeoSpatialGeometryComposition:
    properties:
      geoType:
        type: string
        enum:
        - POINT
        - POLYGON
      coordinates:
        type: array
        items:
          type: object
          properties:
            lat:
              description: column name for point latitude
              type: string
            lon:
              description: column name for point longitude
              type: string
          required:
          - lat
          - lon
    required:
    - geoType
    - coordinates
  GeoSpatialRelation:
    type: object
    properties:
      relType:
        type: string
        enum:
        - ST_CONTAINS
        - ST_DISTANCE
      operator:
        "$ref": "#/definitions/RelationalOperator"
      value:
        type: string
      relationBase:
        type: string
        enum:
        - Left
        - Right
  JoinCondition:
    properties:
      leftColumnName:
        type: string
      rightColumnName:
        type: string
  TransformerPassColumn:
    description: Transformer for insert
    properties:
      columnName:
        type: string
        description: Column name in one specific table
      tableReference:
        type: number
        format: int32
        description: Reference of a table = it's index in input array
      newColumnName:
        description: New column name
        type: string
  RelationalOperator:
    type: string
    enum:
    - gt
    - lt
    - eq
    - ne
  FilterExpression:
    description: Information for filtering transformer
    properties:
      columnName:
        type: string
      value:
        type: string
      relationalOperator:
        "$ref": "#/definitions/RelationalOperator"
      logicalOperator:
        type: string
        enum:
        - and
        - or
    required:
    - columnName
    - value
    - relationalOperator
  AggregateParameters:
    properties:
      aggregateColumn:
        type: string
      groupByColumns:
        description: column names array
        type: array
        items:
          type: string
      operandColumn:
        description: column name
        type: string
      operator:
        type: string
    required:
    - aggregateColumn
    - operandColumn
    - operator
  Transformer:
    description: All Types Of Transformer
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - InsertColumnTransformer
        - AggregateTransformer
        - JoinTransformer
        - ClusterTransformer
        - SqlTransformer
        - FilterTransformer
        - WindowFunctionTransformer
        - RenameColumnsTransformer
        - GeoSpatialJoinTransformer
      transformerType:
        type: string
        enum:
        - InsertColumn
        - Aggregate
        - Join
        - FuzzyJoin
        - Cluster
        - SqlTransformer
        - Filter
        - WindowFunctionTransformer
        - RenameColumns
        - GeoSpatialJoin
  InsertColumnTransformer:
    description: Transformer for insert
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        newColumnName:
          description: Aliases For Tables
          type: string
        expression:
          description: formula
          type: string
        passColumns:
          description: Columns to pass from original table
          type: array
          items:
            "$ref": "#/definitions/TransformerPassColumn"
      required:
      - newColumnName
      - expression
  AggregateTransformer:
    description: Transformer for aggregate
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        aggInfo:
          "$ref": "#/definitions/AggregateParameters"
  ClusterTransformer:
    description: Transformer for cluster
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        clusteringType:
          type: string
        columns:
          type: array
          items:
            type: string
        numClusters:
          type: number
        numIterations:
          type: number
        passColumns:
          description: Columns to pass from original table
          type: array
          items:
            "$ref": "#/definitions/TransformerPassColumn"
  SqlTransformer:
    description: Transformer for query
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        inputAliases:
          description: Aliases For Tables
          type: array
          items:
            type: string
        expression:
          description: Sql query
          type: string
  FilterTransformer:
    description: Transformer for filter
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        filters:
          type: array
          items:
            "$ref": "#/definitions/FilterExpression"
        passColumns:
          description: Columns to pass from original table
          type: array
          items:
            "$ref": "#/definitions/TransformerPassColumn"
  WindowFunctionTransformer:
    description: Transformer for window
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        newColName:
          type: string
        aggregatorArg:
          type: string
        aggregator:
          type: string
        withinGroupExpression:
          type: string
        listaggDelimeter:
          type: string
        ignoreNulls:
          type: boolean
        respectNulls:
          type: boolean
        offset:
          type: number
        isDesc:
          type: boolean
        partitionBy:
          type: array
          items:
            type: string
        orderBy:
          type: array
          items:
            type: string
        windowLowerBound:
          type: number
        windowUpperBound:
          type: number
        ntileGroupsCount:
          type: number
        passColumns:
          description: Columns to pass from original table
          type: array
          items:
            "$ref": "#/definitions/TransformerPassColumn"
        percentile:
          type: number
          format: float
      required:
      - newColName
      - aggregator
  JoinTransformer:
    description: Transformer for join
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        joinColumns:
          type: array
          items:
            "$ref": "#/definitions/JoinCondition"
        leftPrefix:
          type: string
        rightPrefix:
          type: string
        passColumns:
          description: Columns to pass from original table
          type: array
          items:
            "$ref": "#/definitions/TransformerPassColumn"
      required:
      - joinColumns
  GeoSpatialJoinTransformer:
    description: Transformer for join
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        geoJoin:
          type: object
          properties:
            left:
              "$ref": "#/definitions/GeoSpatialGeometryComposition"
            right:
              "$ref": "#/definitions/GeoSpatialGeometryComposition"
            relation:
              "$ref": "#/definitions/GeoSpatialRelation"
          required:
          - left
          - right
          - relation
        leftPrefix:
          type: string
        rightPrefix:
          type: string
        selectedColumns:
          type: array
          items:
            "$ref": "#/definitions/JoinSelectedColumn"
      required:
      - geoJoin
  RenameColumnsTransformer:
    description: Transformer for rename
    allOf:
    - "$ref": "#/definitions/Transformer"
    - type: object
      properties:
        onlyRenamed:
          type: boolean
        changes:
          type: array
          items:
            "$ref": "#/definitions/ColumnRenaming"
  ModelEvaluationSummary:
    type: object
    description: Model summary information. We have linear model and logistic model
      at the moment.
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - LinearModelEvaluationSummary
        - LogisticModelEvaluationSummary
  ModelSummary:
    type: object
    description: Model summary information. We have linear model and logistic model
      at the moment.
    allOf:
    - "$ref": "#/definitions/ModelEvaluationSummary"
    - type: object
      properties:
        modelType:
          type: string
          enum:
          - REGRESSION
          - BINARY
          - MULTICLASS
        predictors:
          type: array
          items:
            "$ref": "#/definitions/ModelPredictorSummary"
        roc:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
            minItems: 2
            maxItems: 2
        areaUnderROC:
          type: number
          format: double
      required:
      - modelType
  DIAASummary:
    type: object
    description: DIAA Metrcs Summary Information.
    properties:
      airDecile:
        type: number
      race_black:
        type: number
        format: double
      race_hispanic:
        type: number
        format: double
      race_asian:
        type: number
        format: double
      gender_female:
        type: number
        format: double
      age_older:
        type: number
        format: double
  DIAAConstraint:
    type: object
    properties:
      metric:
        "$ref": "#/definitions/DIAAConstraintMetric"
      operator:
        "$ref": "#/definitions/DIAAOperator"
      value:
        type: number
  DIAAOperator:
    type: string
    enum:
    - EQ
    - NE
    - LT
    - GT
    - T20
    - T10
    - T05
    - T01
  DIAAConstraintMetric:
    type: string
    enum:
    - RACE_BLACK
    - RACE_HISPANIC
    - RACE_ASIAN
    - GENDER_FEMALE
    - AGE_OLDER
    - AUROC
    - KS
  DIAAObjectiveMetric:
    type: string
    enum:
    - RACE_BLACK
    - RACE_HISPANIC
    - RACE_ASIAN
    - GENDER_FEMALE
    - AGE_OLDER
  DIAAObjective:
    type: object
    properties:
      metrics:
        type: array
        items:
          "$ref": "#/definitions/DIAAObjectiveMetric"
      decile:
        type: number
  protectedGroupsColumnMapping:
    type: object
    properties:
      race_white:
        type: string
      race_black:
        type: string
      race_hispanic:
        type: string
      race_asian:
        type: string
      gender_male:
        type: string
      gender_female:
        type: string
      age_older:
        type: string
      age_younger:
        type: string
  airSpecificationParameters:
    type: object
    description: Model AIR Parameters.
    properties:
      cutOffMode:
        type: string
        enum:
        - decile
        - percentile
        - probability
      decile:
        type: array
        items:
          type: number
        maxLength: 2
      percentile:
        type: number
      probability:
        type: number
    required:
    - cutOffMode
  ModelPredictorSummary:
    type: object
    discriminator: _class
    description: See discriminator values
    properties:
      _class:
        type: string
        enum:
        - ParametricModelPredictorSummary
        - TreeModelPredictorSummary
      importance:
        type: string
  ParametricModelPredictorSummary:
    type: object
    description: There can be any coefficient name with estimate stderror tvalue and
      pvalue
    properties:
      name:
        type: string
      estimate:
        type: number
        format: double
      stdError:
        type: number
        format: double
      tvalue:
        type: number
        format: double
      pvalue:
        type: number
        format: double
  TreeModelPredictorSummary:
    type: object
    description: There can be any coefficient name with estimate stderror tvalue and
      pvalue
    properties:
      name:
        type: string
      importance:
        type: number
        format: double
  LinearModelEvaluationSummary:
    description: Linear model summary information.
    allOf:
    - "$ref": "#/definitions/ModelEvaluationSummary"
    - type: object
      properties:
        rmse:
          type: number
          format: double
        r2:
          type: number
          format: double
        MAPE:
          type: number
          format: double
  LogisticModelEvaluationSummary:
    description: Logistic model summary information
    allOf:
    - "$ref": "#/definitions/ModelEvaluationSummary"
    - type: object
      properties:
        KS:
          type: number
          format: double
        confusionMatrix:
          type: array
          items:
            "$ref": "#/definitions/TabularConfusionMatrixRow"
  TabularConfusionMatrixRow:
    description: Confusion matrix for logistic model
    properties:
      className:
        type: string
      truePositive:
        type: number
        format: int32
      falsePositive:
        type: number
        format: int32
      falseNegative:
        type: number
        format: int32
      trueNegative:
        type: number
        format: int32
  ModelTrainSummary:
    type: object
    description: Model training process summary information.
    properties:
      state:
        type: string
        enum:
        - TRAINING
        - REFINING
        - ENSEMBLING
        - COMPLETE
      iterations:
        type: array
        items:
          "$ref": "#/definitions/ModelTrainIteration"
  ModelTrainIteration:
    type: object
    description: ''
    properties:
      index:
        type: integer
      summary:
        "$ref": "#/definitions/ModelSummary"
      hyperParameters:
        type: array
        items:
          "$ref": "#/definitions/ModelTrainIterationStage"
  ModelTrainIterationStage:
    type: object
    description: ''
    properties:
      pipelineStage:
        type: string
        enum:
        - REMOVE_OUTLIERS
        - DE_SKEW
        - NORMALIZE
        - INTERPOLATE
        - HANDLE_MULTICOLLINEARITY
        - CLASSIFIER
      technique:
        type: string
      parameters:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: number
            stringValue:
              type: string
    required:
    - pipelineStage
    - technique
  ModelColumn:
    description: ModelColumn object
    properties:
      name:
        type: string
      displayName:
        type: string
      dataType:
        "$ref": "#/definitions/TableColumnDataType"
      variableType:
        "$ref": "#/definitions/TableColumnVariableType"
    required:
    - name
    - displayName
    - dataType
    - variableType
  ModelPredictor:
    description: ModelPredictor object
    properties:
      columnName:
        type: string
      tableId:
        type: string
      dataType:
        "$ref": "#/definitions/TableColumnDataType"
      variableType:
        "$ref": "#/definitions/TableColumnVariableType"
    required:
    - columnName
    - tableId
    - dataType
    - variableType
  FlowInput:
    description: Flow's input columns from source table that affect flow
    properties:
      tableId:
        type: string
      tableName:
        type: string
      columns:
        type: array
        items:
          "$ref": "#/definitions/TableColumn"
  FlowOutput:
    description: Flow's output derived tables
    properties:
      tableId:
        type: string
      tableName:
        type: string
  Prediction:
    description: Prediction object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          modelId:
            type: string
          input:
            type: array
            items:
              type: string
              description: Table ID
          output:
            type: string
            description: Table ID
          status:
            type: string
            description: 1 - INCOMPLETE, 2 - NEW, 3 - RUNNING, 4 - ERROR, 5 - DONE
            enum:
            - INCOMPLETE
            - NEW
            - RUNNING
            - ERROR
            - DONE
  Prediction+:
    description: Prediction object detailed
    allOf:
    - "$ref": "#/definitions/Prediction"
    - type: object
      properties:
        columnMappings:
          type: array
          items:
            "$ref": "#/definitions/SimpleMappingPair"
  FlowReplay:
    description: Response For Running Flow In Play
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          originalFlowId:
            type: string
            description: Original/source flow ID
          flowId:
            type: string
            description: newly created flow ID
          status:
            type: string
            enum:
            - NEW
            - RUNNING
            - ERROR
            - DONE
            - DELETED
        required:
          - originalFlowId
          - status
  ColumnIdentifier:
    properties:
      tableId:
        type: string
      columnName:
        type: string
  MappingPair:
    description: Table Name Mapping For Replay Derived Tables
    properties:
      sourceColumn:
        "$ref": "#/definitions/ColumnIdentifier"
      mappedColumn:
        "$ref": "#/definitions/ColumnIdentifier"
  SimpleMappingPair:
    description: Table Name Mapping For Replay Derived Tables
    properties:
      sourceColumn:
        type: string
      mappedColumn:
        type: string
  ReplayOutputName:
    description: Table Name Mapping For Replay Derived Tables
    properties:
      tableId:
        type: string
      newTableName:
        type: string
  Predictors:
    description: Two different kinds of list of predictors. The flow back-tracking
      predictors (flowPredictors) could be optional.
    properties:
      flowPredictors:
        type: array
        items:
          "$ref": "#/definitions/FlowInput"
      inputMatrixPredictors:
        type: array
        items:
          "$ref": "#/definitions/ModelPredictor"
  SharedResource:
    allOf:
    - "$ref": "#/definitions/AbstractAsset"
    - type: object
      properties:
        recipientId:
          type: string
          description: Shared resource recipient id
        assetType:
          "$ref": "#/definitions/AssetType"
          description: Shared Resource Asset Type
        assetId:
          type: string
          description: Shared Resource Asset ID
  Dashboard:
    description: Visualize Dashboard
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          widgets:
            type: array
            items:
              "$ref": "#/definitions/DashboardWidget"
          layout:
            type: object
          crossFilters:
            type: array
            items:
              type: object
              properties:
                tableId:
                  type: string
                columnName:
                  type: string
  DashboardWidget:
    description: Visualize Dashboard Widget
    properties:
      type:
        type: string
      input:
        "$ref": "#/definitions/AssetReference"
      options:
        type: object
    required:
    - type
    - input
  Process:
    description: Process object
    properties:
      id:
        type: string
        description: Id of the process
      target:
        type: string
        description: Object type.
        enum:
        - FLOW
        - TABLE
        - MODEL
        - PREDICTION
        - REPLAY
        - TABLE_STATS
        - ALBUM
        - PICTURE
        - CV_MODEL
        - CV_PREDICTION
        - DASHBOARD
        - OPTIMIZATION
        - DIAA
        - ONLINE_JOB
        - DATASET
      targetId:
        type: string
        description: Object ID
      status:
        type: string
        description: Process status
        enum:
        - RUNNING
        - COMPLETED
        - CANCELLED
        - FAILED
        - QUEUED
      progress:
        type: number
        format: float
        description: Progress percentage. Ex. 0.55
      estimate:
        type: number
        format: int32
        description: RESERVED. In seconds
      created:
        type: string
        format: date-time
      started:
        type: string
        format: date-time
      completed:
        type: string
        format: date-time
      cause:
        type: string
        description: Error message for a failed job
      jobType:
        $ref: "#/definitions/JobType"
    required:
    - target
    - targetId
    - status
    - progress
    - created
    - jobType
  List:
    description: Paginated list
    properties:
      count:
        type: integer
        format: int32
        description: Total count of items
  ListFlowReplay:
    description: Paginated list of FlowReplays
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/FlowReplay"
  ListFlow:
    description: Paginated list of Flows
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Flow"
  ListProject:
    description: List of Projects
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Project"
  Project:
    description: Project object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      created:
        type: string
      updated:
        type: string
      ownerId:
        type: string
      folders:
        type: array
        items:
          "$ref": "#/definitions/ProjectFolder"
    required:
      - id
      - name
      - ownerId
      - folders
  Project+:
    description: Project object with statistics
    allOf:
    - "$ref": "#/definitions/Project"
    - type: object
      properties:
        tablesCount:
          type: integer
          description: Count of Table links
          format: int32
        flowsCount:
          type: integer
          description: Count of Flow links
          format: int32
        modelsCount:
          type: integer
          description: Count of Model links
          format: int32
  ProjectFolder:
    description: Project Folder
    properties:
      id:
        type: string
      path:
        type: string
    required:
    - id
    - path
  ListTable:
    description: Paginated list of Tables
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Table"
  ListDataset:
    description: Paginated list of Dataset items
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            type: array
            items:
              description: any
  ListAlbum:
    description: Paginated list of Albums
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Album"
  ListPicture:
    description: Paginated list of Pictures
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Picture"
  ListModel:
    description: Paginated list of TabularModels
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/TabularModel"
  ListCVModel:
    description: Paginated list of Models
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/CVModel"
  ListPrediction:
    description: Paginated list of Predictions
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Prediction"
  ListCVPrediction:
    description: Paginated list of CV Predictions
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/CVPrediction"
  ListProcess:
    description: Paginated list of Processes
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Process"
  ListSharedResource:
    description: list of SharedResource
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/SharedResource"
  ListDashboard:
    description: list of Dashboards
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Dashboard"
  ListPipelineOperator:
    description: list of PipelineOperators
    allOf:
      - "$ref": "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/PipelineOperator"
  ListPipeline:
    description: list of Pipeline
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Pipeline"
  ListOnlineAPI:
    description: Paginated list of Online APIs
    allOf:
      - "$ref": "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/OnlineAPI"
  ListScriptDeployment:
    description: Paginated list of Online APIs
    allOf:
      - "$ref": "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/ScriptDeployment"
  ID:
    properties:
      id:
        type: string
  Error:
    properties:
      code:
        type: integer
        format: int32
        description: ex. "400"
      reason:
        type: string
        description: ex. "ValidationError"
      message:
        type: string
        description: ex. "Duplicate username"
      errors:
        type: array
        items:
          type: object
  Optimization:
    description: Optimization object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            description: Optimization Status
            enum:
            - RUNNING
            - DONE
            - ERROR
          outputModelId:
            type: string
          modelId:
            type: string
          optimizationType:
            type: string
            enum:
            - PREDICTOR_TUNING
            - OBJECTIVE_FUNCTION
          outputModelName:
            type: string
          objectiveFlowId:
            type: string
          objectives:
            type: array
            items:
              "$ref": "#/definitions/OptimizationObjective"
          constraintFlowId:
            type: string
          optimizationConstraints:
            type: array
            items:
              "$ref": "#/definitions/OptimizationConstraint"
  DIAA:
    description: DIAA object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            description: DIAA Status
            enum:
            - RUNNING
            - DONE
            - ERROR
          outputModelId:
            type: string
          modelId:
            type: string
          outputModelName:
            type: string
          higherModelScoreFavorable:
            type: boolean
          airSpecification:
            "$ref": "#/definitions/airSpecificationParameters"
          summary:
            type: array
            items:
              "$ref": "#/definitions/DIAASummary"
          objective:
            "$ref": "#/definitions/DIAAObjective"
          diaConstraints:
            type: array
            items:
              "$ref": "#/definitions/DIAAConstraint"
          altSummary:
            type: array
            items:
              "$ref": "#/definitions/DIAASummary"
  ListOptimization:
    description: Paginated list of Optimizations
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Optimization"
  ListDIAA:
    description: Paginated list of DIAAS
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/DIAA"
  OptimizationObjective:
    properties:
      metric:
        type: string
        enum:
        - AUROC
        - KS
        - RMSE
      columnName:
        type: string
      goal:
        type: string
        enum:
        - MIN
        - MAX
  OptimizationConstraint:
    properties:
      columnName:
        type: string
      value:
        type: string
      relationalOperator:
        type: string
        enum:
        - eq
        - ne
        - lt
        - gt
      logicalOperator:
        type: string
        enum:
        - AND
        - OR
  ScatterSummary:
    properties:
      quantizationSteps:
        type: number
        format: int32
      columns:
        type: array
        items:
          "$ref": "#/definitions/TableColumn"
      data:
        description: Binned Dataset rows
        type: array
        items:
          type: object
          properties:
            column1:
              type: string
            column2:
              type: string
            values:
              type: object
              properties:
                count:
                  type: number
                  format: int32
                value1:
                  type: number
                  format: float
                value2:
                  type: number
                  format: float
  OnlineJob:
    description: Online Job definition  object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            description: Online Job Status
            enum:
            - RUNNING
            - IDLE
          enabled:
            type: boolean
          target:
            "$ref": "#/definitions/AssetReference"
          options:
            "$ref": "#/definitions/OnlineJobOptions"
  OnlineJobOptions:
    description: Online Job definition object
    discriminator: _class
    properties:
      _class:
        description: here only for swagger definitions, see enum for available classes
        type: string
        enum:
        - OnlineJobOptions_CVPrediction
      type:
        description: Online job type
        type: string
        enum:
        - ONLINE_CV_PREDICTION
    required:
    - type
  OnlineJobOptions_CVPrediction:
    description: Online Job definition options for CV model prediction
    allOf:
    - "$ref": "#/definitions/OnlineJobOptions"
    - type: object
      properties:
        inputBucketId:
          type: string
        inputImagesPath:
          type: string
        outputAlbumId:
          type: string
      required:
      - inputBucketId
      - inputImagesPath
      - outputAlbumId
  OnlineJobCreateOptions:
    description: Online Job definition object
    discriminator: _class
    properties:
      _class:
        description: here only for swagger definitions, see enum for available classes
        type: string
        enum:
        - OnlineJobCreateOptions_CVPrediction
      type:
        description: Online job type
        type: string
        enum:
        - ONLINE_CV_PREDICTION
    required:
    - type
  OnlineJobCreateOptions_CVPrediction:
    description: Online Job definition options for CV model prediction
    allOf:
    - "$ref": "#/definitions/OnlineJobCreateOptions"
    - type: object
      properties:
        inputBucketId:
          type: string
        inputImagesPath:
          type: string
        outputAlbumName:
          type: string
      required:
      - inputBucketId
      - inputImagesPath
      - outputAlbumName
  OnlineJobList:
    description: Paginated list of Online Jobs
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/OnlineJob"
  ScriptDeployment:
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            description: Script deployment Status
            enum:
              - PREPARING
              - READY
          mode:
            "$ref": "#/definitions/ScriptDeploymentMode"
          hardwareMode:
            "$ref": "#/definitions/ScriptDeploymentHardwareMode"
          params:
            "$ref": "#/definitions/ScriptDeploymentParams"
        required:
          - status
          - mode
          - hardwareMode
          - params
  ScriptDeploymentParams:
    discriminator: "_class"
    properties:
      _class:
        type: string
        enum:
          - ScriptDeploymentParams_CV3STLDetection
  ScriptDeploymentHardwareMode:
    type: string
    enum:
      - CPU
      - CUDA
      - INTEL_NCS2
  ScriptDeploymentMode:
    type: string
    enum:
      - CV_3STL_DETECTION
      - CV_PREDICTION
  ScriptDeploymentParams_CV3STLDetection:
    allOf:
      - "$ref": "#/definitions/ScriptDeploymentParams"
      - type: object
        properties:
          localizerModelId:
            description: localizer step CVModel reference
            type: string
          classifierModelId:
            description: detector step CVModel reference
            type: string
        required:
          - localizerModelId
          - classifierModelId
  ClassReference:
    description: ClassReference definition
    type: object
    properties:
      packageId:
        type: string
      moduleName:
        type: string
      className:
        type: string
    required:
      - packageId
      - moduleName
      - className
  CVModelType_Type:
    type: string
    description: Type of CVModelType
    enum:
      - CUSTOM
      - TL
  CVModelType:
    description: Base-level CVModelType abstraction
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
          - CVModelType_Custom
          - CVModelType_TL
      type:
        "$ref": "#/definitions/CVModelType_Type"
      labelMode:
        "$ref": "#/definitions/AlbumLabelType"
    required:
      - type
  CVModelType_Custom:
    description: Custom type of CVModel abstraction
    allOf:
      - "$ref": "#/definitions/CVModelType"
      - type: object
        properties:
          type:
            type: string
            enum:
              - CUSTOM
          classReference:
            "$ref": "#/definitions/ClassReference"
        required:
          - classReference
  CVModelType_TLType:
    description: TL-types of CVModel base abstraction
    type: string
    enum:
      - CLASSIFICATION
      - LOCALIZATION
      - AUTOENCODER
  CVModelType_TL:
    description: TL-level CVModelType base abstraction
    discriminator: _class
    allOf:
      - "$ref": "#/definitions/CVModelType"
      - "$ref": "#/definitions/CVModelType_TLConsumer"
      - type: object
        properties:
          architecture:
            type: string
        required:
          - architecture
  CVModelType_TLConsumer:
    description: TL Consumer portion definition
    properties:
      _class:
        type: string
        enum:
          - CVModelType_TLClassifier
          - CVModelType_TLDetector
          - CVModelType_TLDecoder
      tlType:
        "$ref": "#/definitions/CVModelType_TLType"
    required:
      - tlType
  CVModelType_TLClassifier:
    description: TLClassifier which extends CVModel-TL
    allOf:
      - "$ref": "#/definitions/CVModelType_TLConsumer"
      - type: object
        properties:
          tlType:
            type: string
            enum:
              - CLASSIFICATION
          classifierType:
            type: string
        required:
          - classifierType
  CVModelType_TLDetector:
    description: TLDetector which extends CVModel-TL
    allOf:
      - "$ref": "#/definitions/CVModelType_TLConsumer"
      - type: object
        properties:
          tlType:
            type: string
            enum:
              - LOCALIZATION
          detectorType:
            type: string
        required:
          - detectorType
  CVModelType_TLDecoder:
    description: TLAutoendcoder which extends CVModel-TL
    allOf:
      - "$ref": "#/definitions/CVModelType_TLConsumer"
      - type: object
        properties:
          tlType:
            type: string
            enum:
              - AUTOENCODER
          decoderType:
            type: string
        required:
          - decoderType
  CVModelStatus:
    type: string
    enum:
    - SAVING
    - TRAINING
    - PREDICTING
    - ACTIVE
    - ERROR
    - CANCELLED
  PipelineParameters:
    description: "Simple parameters map that can contain:
          - number
          - string
          - boolean
          - number[]
          - string[]
          - boolean[]"
    type: object
    example:
      extraA: 12
      extra_b: 2.4
      extra_C: ['a', 'b']
  CVAugmentationOptions:
    description: CV train automated DA options
    properties:
      augmentations:
        type: array
        items:
          "$ref": "#/definitions/AlbumAugmentationStep"
        minItems: 1
      bloatFactor:
        type: number
        format: int32
      prepareSampleAlbum:
        type: boolean
    required:
    - augmentations
    - bloatFactor
    - prepareSampleAlbum
  S3BucketInfo:
    description: Predefined S3 Bucket info
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  S3BucketInfoList:
    description: Predefined S3 Bucket info
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/S3BucketInfo"
  S3BucketReference:
    description: Predefined S3 Bucket info
    type: object
    properties:
      AWSS3BucketId:
        type: string
      AWSRegion:
        type: string
      AWSS3BucketName:
        type: string
      AWSAccessKey:
        type: string
      AWSSecretKey:
        type: string
      AWSSessionToken:
        type: string
  OnlineAPI:
    type: object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            "$ref": "#/definitions/OnlineAPIStatus"
          target:
            "$ref": "#/definitions/AssetReference"
        required:
        - status
        - target
  OnlineAPIStatus:
    type: string
    description: Online Job Status
    enum:
    - ACTIVE
    - INACTIVE
  OnlineAPIPredictResponse:
    type: object
    properties:
      predictions:
        type: array
        items:
          type: object
          additionalProperties:
            type:
            - string
            - integer
            - number
            - boolean
          minProperties: 1
          maxProperties: 1
          example:
            predicted_string: foo

  AlbumAugmentationType:
    type: string
    enum:
    - ROTATION
    - SHEARING
    - NOISING
    - ZOOM_IN
    - ZOOM_OUT
    - OCCLUSION
    - TRANSLATION
    - SALT_PEPPER
    - MIRRORING
    - CROPPING
    - BLURRING
    - PHOTO_DISTORT

  AlbumAugmentationStep:
    description: Data Augmentation step abstract, see child types
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - AlbumAugmentationRotation
        - AlbumAugmentationShearing
        - AlbumAugmentationNoising
        - AlbumAugmentationZoomIn
        - AlbumAugmentationZoomOut
        - AlbumAugmentationOcclusion
        - AlbumAugmentationTranslation
        - AlbumAugmentationSaltPepper
        - AlbumAugmentationMirroring
        - AlbumAugmentationCropping
        - AlbumAugmentationBlurring
        - AlbumAugmentationPhotoDistort
      augmentationType:
        $ref: "#/definitions/AlbumAugmentationType"
      bloatFactor:
        type: number
        format: int32
    required:
    - augmentationType
  AlbumAugmentationRotation:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        angles:
          type: array
          items:
            type: number
        resize:
          type: boolean
      required:
        - angles
        - resize
  AlbumAugmentationShearing:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        angles:
          type: array
          items:
            type: number
        resize:
          type: boolean
      required:
        - angles
        - resize
  AlbumAugmentationNoising:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        noiseSignalRatios:
          type: array
          items:
            type: number
      required:
        - noiseSignalRatios
  AlbumAugmentationZoomIn:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        ratios:
          type: array
          items:
            type: number
        resize:
          type: boolean
      required:
        - ratios
        - resize
  AlbumAugmentationZoomOut:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        ratios:
          type: array
          items:
            type: number
        resize:
          type: boolean
      required:
        - ratios
        - resize
  AlbumAugmentationOcclusion:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        occAreaFractions:
          type: array
          items:
            type: number
        mode:
          type: string
          enum:
          - BACKGROUND
          - ZERO
        isSARAlbum:
          type: boolean
        targetWindowSize:
          type: number
          format: integer
      required:
        - occAreaFractions
        - mode
        - isSARAlbum
        - targetWindowSize
  AlbumAugmentationTranslation:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        translateFractions:
          type: array
          items:
            type: number
        mode:
          type: string
          enum:
          - REFLECT
          - CONSTANT
        resize:
          type: boolean
      required:
        - translateFractions
        - mode
        - resize
  AlbumAugmentationSaltPepper:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        knockoutFractions:
          type: array
          items:
            type: number
        pepperProbability:
          type: number
          minimum: 0.0
          maximum: 1.0
      required:
        - knockoutFractions
        - pepperProbability
  AlbumAugmentationMirroring:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        flipAxes:
          type: array
          maxLength: 3
          items:
            type: number
            format: integer
            minimum: 0
            maximum: 2
      required:
        - flipAxes
  AlbumAugmentationCropping:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        cropAreaFractions:
          type: array
          items:
            type: number
        cropsPerImage:
          type: number
          format: integer
          minimum: 1
        resize:
          type: boolean
      required:
        - cropAreaFractions
        - cropsPerImage
        - resize
  AlbumAugmentationBlurring:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        sigmas:
          type: array
          items:
            type: number
      required:
        - sigmas
  AlbumAugmentationPhotoDistort:
    allOf:
    - "$ref": "#/definitions/AlbumAugmentationStep"
    - type: object
      properties:
        alphaMin:
          type: number
        alphaMax:
          type: number
        deltaMax:
          type: number
      required:
        - alphaMin
        - alphaMax
        - deltaMax


  PictureAugmentationApplied:
    description: Data Augmentation step abstract, see child types
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - PictureAugmentationRotation
        - PictureAugmentationShearing
        - PictureAugmentationNoising
        - PictureAugmentationZoomIn
        - PictureAugmentationZoomOut
        - PictureAugmentationOcclusion
        - PictureAugmentationTranslation
        - PictureAugmentationSaltPepper
        - PictureAugmentationMirroring
        - PictureAugmentationCropping
        - PictureAugmentationBlurring
        - PictureAugmentationPhotoDistort
      augmentationType:
        $ref: "#/definitions/AlbumAugmentationType"
      extraParams:
        type: object
        additionalProperties:
          type:
          - number
        example:
          extraA: 12
          extra_b: 2.4
    required:
    - augmentationType
  PictureAugmentationRotation:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        angle:
          type: number
        resize:
          type: boolean
      required:
        - angle
  PictureAugmentationShearing:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        angle:
          type: number
        resize:
          type: boolean
      required:
        - angle
  PictureAugmentationNoising:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        noiseSignalRatio:
          type: number
      required:
        - noiseSignalRatio
  PictureAugmentationZoomIn:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        ratio:
          type: number
        resize:
          type: boolean
      required:
        - ratio
        - resize
  PictureAugmentationZoomOut:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        ratio:
          type: number
        resize:
          type: boolean
      required:
        - ratio
        - resize
  PictureAugmentationOcclusion:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        occAreaFraction:
          type: number
        mode:
          type: string
          enum:
          - BACKGROUND
          - ZERO
        targetWindowSize:
          type: number
          format: integer
      required:
        - occAreaFraction
        - mode
        - targetWindowSize
  PictureAugmentationTranslation:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        translateFraction:
          type: number
        mode:
          type: string
          enum:
          - REFLECT
          - CONSTANT
        resize:
          type: boolean
      required:
        - translateFraction
        - mode
        - resize
  PictureAugmentationSaltPepper:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        knockoutFraction:
          type: number
        pepperProbability:
          type: number
      required:
        - knockoutFraction
        - pepperProbability
  PictureAugmentationMirroring:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        flipAxis:
          type: number
          format: integer
          minimum: 0
          maximum: 2
      required:
        - flipAxis
  PictureAugmentationCropping:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        cropAreaFraction:
          type: number
        resize:
          type: boolean
      required:
        - cropAreaFraction
        - resize
  PictureAugmentationBlurring:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        sigma:
          type: number
      required:
        - sigma
  PictureAugmentationPhotoDistort:
    allOf:
    - "$ref": "#/definitions/PictureAugmentationApplied"
    - type: object
      properties:
        alphaContrast:
          type: number
        alphaSaturation:
          type: number
        deltaHue:
          type: number
      required:
        - alphaContrast
        - alphaSaturation
        - deltaHue
  CvArchitecture:
    type: object
    properties:
      id:
        type: string
        example: VGG_16
      packageName:
        type: string
        example: com.example
      packageVersion:
        type: string
        example: 12.3.4
      module:
        type: string
        example: detectors
      className:
        type: string
        example: Detector
      name:
        type: string
        example: VGG 16
      needsConsumer:
        type: boolean
        description: Defines whether a consumer is required
      params:
        type: array
        items:
          $ref: "#/definitions/Pipeline_ParameterDefinition"
    required:
      - id
      - packageName
      - module
      - className
      - name
  CvClassifier:
    type: object
    properties:
      id:
        type: string
        example: FCN_1LAYER
      packageName:
        type: string
        example: com.example
      packageVersion:
        type: string
        example: 12.3.4
      module:
        type: string
        example: classifiers
      className:
        type: string
        example: Classifier
      name:
        type: string
        example: FCN 1-layer Classifier
      isNeural:
        type: boolean
        description: Defines whether a classifier can be used as a consumer
      params:
        type: array
        items:
          $ref: "#/definitions/Pipeline_ParameterDefinition"
    required:
      - id
      - packageName
      - module
      - className
      - name
  CvDetector:
    type: object
    properties:
      id:
        type: string
        example: RFBNET
      packageName:
        type: string
        example: com.example
      packageVersion:
        type: string
        example: 12.3.4
      module:
        type: string
        example: detectors
      className:
        type: string
        example: Detector
      name:
        type: string
        example: RFBNet
      isNeural:
        type: boolean
        description: Defines whether a detector can be used as a consumer
      params:
        type: array
        items:
          $ref: "#/definitions/Pipeline_ParameterDefinition"
    required:
      - id
      - packageName
      - module
      - className
      - name
  CvDecoder:
    type: object
    properties:
      id:
        type: string
        example: STACKED
      name:
        type: string
        example: SCAE
      isNeural:
        type: boolean
      params:
        type: array
        items:
          $ref: "#/definitions/Pipeline_ParameterDefinition"
    required:
      - id
      - name
      - isNeural
  OperatorCategory:
    type: object
    properties:
      id:
        type: string
        example: asset-loaders
        description: Id of Category Reference in Operator, this is a system-level name
      name:
        type: string
        description: Human facing name of the Category
      icon:
        type: string
        description: Icon class of the Category
    required:
    - id
    - name
    - icon
  S9Project:
    description: S9 Project object
    type: object
    allOf:
      - "$ref": "#/definitions/AbstractAsset"
      - type: object
        properties:
          status:
            type: string
            enum:
            - IDLE
            - BUILDING
            - INTERACTIVE
            description: Status
          packageName:
            type: string
            description: Current package name
          packageVersion:
            type: string
            description: The latest package version
        required:
          - status
  ListS9Project:
    description: Paginated list of S9 Projects 
    allOf:
    - $ref: "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/S9Project"
  S9ProjectFile:
    description: S9 Project File entity
    type: object
    properties:
      type:
        description: Type of the entity (directory or file)
        type: string
        enum:
          - FILE
          - DIR
      name:
        description: File name
        type: string
      modified:
        description: File modification time
        type: string
        format: date-time
  ListPackages:
    description: Paginated list of __S9 Project Packages__
    allOf:
    - $ref: "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/Package"
  Package:
    description: __S9 Project Package__ object
    properties:
      id:
        type: string
        description: ID
      name:
        type: string
        description: DC
      created:
        type: string
        format: date-time
        description: Creation date
      ownerId:
        type: string
        description: Owner ID
      description:
        type: string
        description: Package description
      version:
        type: string
        description: Package version
      location:
        type: string
        description: Package path
      s9ProjectId:
        type: string
        description: S9 Project ID
      isPublished:
        type: boolean
    required:
      - id
      - name
      - created
      - location
      - s9ProjectId
      - isPublished
  Package+:
    description: __S9 Project Package__ object with published classes
    allOf:
      - "$ref": "#/definitions/Package"
      - type: object
        properties:
          primitives:
            type: array
            description: Array of CV TL Model Primitives
            items:
              $ref: '#/definitions/CVTLModelPrimitive'
          pipelineOperators:
            type: array
            description: Array of Pipeline Operators
            items:
              $ref: '#/definitions/PipelineOperator'
  CVTLModelPrimitive:
    description: Pipeline Operator
    properties:
      name:
        type: string
        description: Operator Name
      description:
        type: string
        description: Operator Description
      moduleName:
        type: string
        description: Operator Module Name
      className:
        type: string
        description: Operator Class Name
      operatorType:
        $ref: "#/definitions/CVTLModelPrimitiveType"
        description: Operator Type
  CVTLModelPrimitiveType:
    type: string
    enum:
      - UTLP
      - CLASSIFIER
      - DETECTOR
  JobType:
    type: string
    enum:
    - S3_VIDEO_IMPORT
    - S3_IMAGES_IMPORT
    - TABULAR_UPLOAD
    - ALBUM_AUGMENTATION
    - CV_MODEL_TRAIN
    - CV_MODEL_EVALUATE
    - CV_MODEL_PREDICT
    - TABULAR_EVALUATE
    - TABULAR_TRAIN
    - TABULAR_PREDICT
    - CV_MODEL_IMPORT
    - GENERIC_EXPERIMENT
    - TABULAR_COLUMN_STATISTICS
    - MERGE_ALBUM
    - PROJECT_BUILD
    - DATASET_IMPORT
    - DATASET_EXPORT
    - SCRIPT_DEPLOYMENT
    description: Job Type
  Experiment:
    description: Experiment
    allOf:
    - "$ref": "#/definitions/AbstractAsset"
    - type: object
      properties:
        type:
          "$ref": "#/definitions/ExperimentType"
        status:
          "$ref": "#/definitions/ExperimentStatus"
      required:
      - status
  ExperimentFull:
    description: Experiment
    allOf:
      - "$ref": "#/definitions/Experiment"
      - properties:
          pipeline:
            "$ref": "#/definitions/ExperimentPipeline"
          result:
            "$ref": "#/definitions/ExperimentResult"
        required:
          - pipeline
  CVTLTrainStepResult:
    description: CV Train Result
    properties:
      cvModelId:
        type: string
      output:
        type: string
      testOutput:
        type: string
      augmentedSampleAlbum:
        type: string
      summary:
        "$ref": "#/definitions/CVModelSummary"
      testSummary:
        "$ref": "#/definitions/CVModelSummary"
      augmentationSummary:
        type: array
        items:
          "$ref": "#/definitions/AlbumAugmentationSummary"
      probabilityPredictionTableId:
        type: string
        description: Table id
      testProbabilityPredictionTableId:
        type: string
        description: Table id
      trainTimeSpentSummary:
        "$ref": "#/definitions/CVModelTrainTimeSpentSummary"
      evaluationTimeSpentSummary:
        "$ref": "#/definitions/CVEvaluationTimeSpentSummary"
    required:
    - cvModelId
    - output
    - summary
  ExperimentResult:
    description: Experiment Result
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - CVTLTrainResult
        - TabularTrainResult
        - GenericExperimentResult
  ExperimentType:
    description: "Used to distinguish different experiments and their pipelines/results"
    type: string
    enum:
    - CVTLTrain
    - TabularTrain
    - GenericExperiment
  ExperimentStatus:
    type: string
    enum:
    - RUNNING
    - COMPLETED
    - ERROR
    - CANCELLED
  CVTLTrainResult:
    description: CV TL Train Result
    allOf:
    - "$ref": "#/definitions/ExperimentResult"
    - type: object
      properties:
        step1:
          "$ref": "#/definitions/CVTLTrainStepResult"
        step2:
          "$ref": "#/definitions/CVTLTrainStepResult"
      required:
      - step1
  CVTLTrainStep1Params:
    description: CV TL Train Params for Step1
    properties:
      featureExtractorModelId:
        type: string
        description: Feature Extractor ID
      tuneFeatureExtractor:
        type: boolean
      architecture:
        type: string
      modelType:
        "$ref": "#/definitions/CVModelType_TLConsumer"
      input:
        type: string
      testInput:
        type: string
      augmentationOptions:
        "$ref": "#/definitions/CVAugmentationOptions"
      params:
        "$ref": "#/definitions/PipelineParameters"
      featureExtractorParams:
        "$ref": "#/definitions/PipelineParameters"
      trainParams:
        "$ref": "#/definitions/CommonTrainParams"
    required:
    - modelType
    - input
  CVTLTrainStep2Params:
    description: CV TL Train Params for Step2
    properties:
      tuneFeatureExtractor:
        type: boolean
      modelType:
        "$ref": "#/definitions/CVModelType_TLConsumer"
      input:
        type: string
      testInput:
        type: string
      augmentationOptions:
        "$ref": "#/definitions/CVAugmentationOptions"
      params:
        "$ref": "#/definitions/PipelineParameters"
      trainParams:
        "$ref": "#/definitions/CommonTrainParams"
    required:
    - modelType
    - input
  TabularTrainResult:
    description: Tabular Train Result
    allOf:
      - "$ref": "#/definitions/ExperimentResult"
      - type: object
        properties:
          modelId:
            type: string
            description: Table id
          output:
            type: string
            description: Table id
          holdOutOutput:
            type: string
            description: Table id
          outOfTimeOutput:
            type: string
            description: Table id
          predictedColumn:
            type: string
          probabilityColumns:
            type: array
            items:
              type: string
          summary:
            "$ref": "#/definitions/ModelSummary"
          holdOutSummary:
            "$ref": "#/definitions/ModelEvaluationSummary"
          outOfTimeSummary:
            "$ref": "#/definitions/ModelEvaluationSummary"
        required:
          - modelId
          - output
          - summary
  ExperimentPipeline:
    description: Experiment Pipeline
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
        - CVTLTrainPipeline
        - TabularTrainPipeline
        - GenericExperimentPipeline
  CVTLTrainPipeline:
    description: CV TL Train Pipeline
    allOf:
    - "$ref": "#/definitions/ExperimentPipeline"
    - type: object
      properties:
        step1:
          "$ref": "#/definitions/CVTLTrainStep1Params"
        step2:
          "$ref": "#/definitions/CVTLTrainStep2Params"
      required:
      - step1
  TabularTrainPipeline:
    description: Tabular Train Pipeline
    allOf:
      - "$ref": "#/definitions/ExperimentPipeline"
      - type: object
        properties:
          input:
            type: string
            description: Table id
          holdOutInput:
            type: string
            description: Table id
          outOfTimeInput:
            type: string
            description: Table id
          responseColumn:
            "$ref": "#/definitions/ModelColumn"
          samplingWeightColumn:
            type: string
          predictorColumns:
            type: array
            items:
              "$ref": "#/definitions/ModelColumn"
        required:
          - input
          - responseColumn
          - predictorColumns
  GenericExperimentPipeline:
    description: Generic Experiment Pipeline
    allOf:
    - "$ref": "#/definitions/ExperimentPipeline"
    - type: object
      properties:
        steps:
          type: array
          items:
            "$ref": "#/definitions/Pipeline_Step"
        assets:
          type: array
          readOnly: true
          items:
            "$ref": "#/definitions/AssetReference"
      required:
      - steps
      - assets
  GenericExperimentResult:
    description: Generic Experiment Result
    allOf:
      - "$ref": "#/definitions/ExperimentResult"
      - type: object
        properties:
          steps:
            type: array
            items:
              "$ref": "#/definitions/GenericExperimentStepResult"
        required:
          - steps
  GenericExperimentStepResult:
    description: Experiment step result base
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
          - GenericExperimentStepSuccessResult
          - GenericExperimentStepErrorResult
      stepId:
        type: string
      assets:
        type: array
        items:
          "$ref": "#/definitions/AssetReference"
    required:
      - stepId
      - assets
  GenericExperimentStepSuccessResult:
    description: Generic Experiment Step Result
    allOf:
      - "$ref": "#/definitions/ExperimentPipeline"
      - type: object
        properties:
          summaries:
            type: array
            items:
              "$ref": "#/definitions/OperatorApplicationSummary"
          outputValues:
            type: object
            additionalProperties:
              type:
                - string
                - number
                - boolean
          executionTime:
            type: integer
        required:
          - summaries
          - outputValues
          - executionTime
  GenericExperimentStepErrorResult:
    description: Generic Experiment Step Error Result
    allOf:
      - "$ref": "#/definitions/ExperimentPipeline"
      - type: object
        properties:
          errorMessage:
            type: string
        required:
          - errorMessage
  OperatorApplicationSummary:
    type: object
    description: Operator Application Summary
    discriminator: _class
    properties:
      _class:
        description: here only for swagger definitions, see enum for available classes
        type: string
        enum:
          - OperatorApplicationSummary_ConfusionMatrix
          - OperatorApplicationSummary_SimpleSummary
      type:
        description: Summary type
        type: string
        enum:
          - SIMPLE
          - CONFUSION_MATRIX
  OperatorApplicationSummary_SimpleSummary:
    allOf:
      - "$ref": "#/definitions/OperatorApplicationSummary"
      - type: object
        properties:
          values:
            type: object
            additionalProperties:
              type:
                - string
                - number
                - boolean
  OperatorApplicationSummary_ConfusionMatrix:
    allOf:
      - "$ref": "#/definitions/OperatorApplicationSummary"
      - type: object
        properties:
          labels:
            type: array
            items:
              type: string
          rows:
            type: array
            items:
              "$ref": "#/definitions/ConfusionMatrixRow"
  ListExperiment:
    description: Paginated list of Experiments
    allOf:
    - "$ref": "#/definitions/List"
    - type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/definitions/Experiment"

  UMUser:
    description: User object from user managaer POV
    properties:
      id:
        type: string
      username:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      role:
        $ref: "#/definitions/UserRole"
      status:
        type: string
        enum:
        - INACTIVE
        - ACTIVE
        - DEACTIVATED
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
    required:
      - id
      - username
      - email
      - firstName
      - lastName
      - status
      - created
      - updated
  UserRole:
    description: User role
    type: string
    enum:
      - ADMIN
      - USER
  ListUser:
    description: Paginated list of Users
    allOf:
      - $ref: "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/UMUser"
  S9ProjectSession:
    description: __S9 Project__ session
    type: object
    properties:
      id:
        type: string
        description: Session ID
      authToken:
        type: string
        description: Jupyter lab session token
      s9ProjectId:
        type: string
        description: S9 Project ID
      created:
        type: string
        format: date-time
        description: Date-time when the session was started
      url:
        description: URL to open the session
        type: string
    required:
      - id
      - authToken
      - s9ProjectId
      - created
      - url
  S9ProjectSessionStatus:
    type: string
    description: __S9 Project__ session status
    enum:
      - RUNNING
      - COMPLETED
      - QUEUED
      - SUBMITTED
      - FAILED
  PipelineOperator:
    description: Pipeline Operator
    type: object
    properties:
      name:
        type: string
      id:
        type: string
        description: Object ID
      className:
        type: string
      moduleName:
        type: string
      packageName:
        type: string
      packageVersion:
        type: string
      category:
        type: string
      inputs:
        type: array
        items:
          "$ref": "#/definitions/PipelineOperator_Input"
      outputs:
        type: array
        items:
          "$ref": "#/definitions/PipelineOperator_Output"
      params:
        type: array
        items:
          "$ref": "#/definitions/Pipeline_ParameterDefinition"
    required:
      - name
      - id
      - className
      - moduleName
      - packageName
      - category
      - inputs
      - outputs
      - params
  PipelineOperator_Input:
    description: Inputs of a Pipeline operator
    type: object
    properties:
      name:
        type: string
      caption:
        type: string
      description:
        type: string
      type:
        "$ref": "#/definitions/PipelineDataType"
      covariate:
        type: boolean
      optional:
        type: boolean
    required:
      - name
      - type
      - covariate
  PipelineOperator_Output:
    description: Outputs of Pipeline Operator
    type: object
    properties:
      caption:
        type: string
      description:
        type: string
      type:
        "$ref": "#/definitions/PipelineDataType"
    required:
      - type
  Pipeline_ParameterDefinition:
    description: Base pipeline parameter definition
    type: object
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
          - Pipeline_IntParameterDefinition
          - Pipeline_StringParameterDefinition
          - Pipeline_BooleanPrameterDefinition
          - Pipeline_FloatParameterDefinition
          - Pipeline_AssetReferenceParameterDefinition
      name:
        type: string
      caption:
        type: string
      description:
        type: string
      type:
        type: string
        enum:
          - int
          - float
          - boolean
          - string
      multiple:
        type: boolean
      conditions:
        description: defines conditions when a parameter is editable and represents a map of __Parameter Name__ (name of parameter this one depends on) and __Pipeline_ParameterCondition__ (specifies conditions of that parameter that make the current one active)
        type: object
        additionalProperties:
          $ref: "#/definitions/Pipeline_ParameterCondition"
    required:
      - name
      - type
  PipelineOperatorPublish:
    description: Pipeline Operator Publish
    type: object
    properties:
      id:
        type: string
      categoryId:
        type: string
    required:
      - id
      - categoryId
  Pipeline_IntParameterDefinition:
    description: Integer type parameter
    allOf:
      - $ref: "#/definitions/Pipeline_ParameterDefinition"
      - type: object
        properties:
          type:
            description: parameter type
            type: string
            enum:
              - int
          min:
            description: min value
            type: integer
            format: int32
          max:
            description: max value
            type: integer
            format: int32
          step:
            description: incremental step
            type: integer
            format: int32
          options:
            description: possible values
            type: array
            items:
              type: integer
              format: int32
          defaults:
            description: default values
            type: array
            items:
              type: integer
              format: int32
        required:
          - type
  Pipeline_FloatParameterDefinition:
    allOf:
      - $ref: "#/definitions/Pipeline_ParameterDefinition"
      - type: object
        description: Float type parameter
        properties:
          type:
            description: parameter type
            type: string
            enum:
              - float
          min:
            description: min value
            type: number
            format: float
          max:
            description: max value
            type: number
            format: float
          step:
            description: incremental step
            type: number
            format: float
          options:
            description: possible values
            type: array
            items:
              type: number
              format: float
          defaults:
            description: default values
            type: array
            items:
              type: number
              format: float
        required:
          - type
  Pipeline_StringParameterDefinition:
    description: String type parameter
    allOf:
      - $ref: "#/definitions/Pipeline_ParameterDefinition"
      - type: object
        properties:
          type:
            description: parameter type
            type: string
            enum:
              - string
          options:
            description: available value options
            type: array
            items:
              type: string
          defaults:
            description: default values
            type: array
            items:
              type: string
        required:
          - type
          - options
  Pipeline_BooleanParameterDefinition:
    description: Boolean type parameter
    allOf:
      - $ref: "#/definitions/Pipeline_ParameterDefinition"
      - type: object
        properties:
          type:
            description: parameter type
            type: string
            enum:
              - boolean
          defaults:
            description: default values
            type: array
            items:
              type: boolean
        required:
          - type
  Pipeline_AssetReferenceParameterDefinition:
    description: AssetReference parameter type
    allOf:
      - $ref: "#/definitions/Pipeline_ParameterDefinition"
      - type: object
        properties:
          type:
            description: parameter type
            type: string
            enum:
              - assetReference
          assetType:
            "$ref": "#/definitions/AssetType"
        required:
          - assetType
  Pipeline_ParameterCondition:
    description: Base pipeline parameter condition definition
    type: object
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
          - Pipeline_IntParameterCondition
          - Pipeline_StringParameterCondition
          - Pipeline_BooleanPrameterCondition
          - Pipeline_FloatParameterCondition
  Pipeline_IntParameterCondition:
    description: Integer type parameter condition
    type: object
    properties:
      values:
        description: values condition depends on
        type: array
        items:
          type: integer
          format: int32
      min:
        description: defines the left side of the value range limit that activates a condition
        type: integer
        format: int32
        minimum: 1
      max:
        description: defines the right side of the value range limit that activates a condition
        type: integer
        format: int32
        minimum: 1
  Pipeline_FloatParameterCondition:
    description: parameter condition of int type
    type: object
    properties:
      values:
        type: array
        items:
          type: number
          format: float
      min:
        type: number
        format: float
        minimum: 1
      max:
        type: number
        format: float
        minimum: 1
  Pipeline_StringParameterCondition:
    description: String type parameter condition
    type: object
    properties:
      values:
        description: values that condition depends on
        type: array
        items:
          type: string
    required:
      - values
  Pipeline_BooleanParameterCondition:
    description: parameter of boolean type
    type: object
    properties:
      value:
        type: boolean
    required:
      - value
  PipelineDataType:
    description: types of PipelineDataType
    discriminator: _class
    properties:
      _class:
        type: string
        enum:
          - PipelineDataType_Complex
          - PipelineDataType_Primitive
  PipelineDataType_Primitive:
    type: string
    description: Primitive type of Pipeline datatype
    enum:
      - string
      - integer
      - float
      - boolean
  PipelineDataType_Complex:
    description: Complex type of Pipeline datatype
    type: object
    properties:
      definition:
        type: string
      parents:
        type: array
        items:
          "$ref": "#/definitions/PipelineDataType_Complex"
      typeArguments:
        type: array
        items:
          "$ref": "#/definitions/PipelineDataType"
    required:
      - definition
      - typeArguments
  Pipeline:
    description: Pipeline
    allOf:
    - "$ref": "#/definitions/AbstractAsset"
    - type: object
      properties:
        steps:
          type: array
          items:
            "$ref": "#/definitions/Pipeline_StepInfo"
        status:
          type: string
          enum:
            - IDLE
      required:
        - steps
  CanvasCoordinates:
    description: Represents XY coordinates for an element on canvas
    properties:
      x:
        type: integer
        format: int32
      y:
        type: integer
        format: int32
  Pipeline_Step:
    description: Pipeline Step
    type: object
    properties:
      id:
        type: string
        description: Arbitrary ID given to the step, unique within the pipeline
      operator:
        type: string
        description: Object Id
      inputs:
        type: object
        description: "hashmap of string and #/definitions/Pipeline_OutputReference pairs"
        additionalProperties:
          "$ref": "#/definitions/Pipeline_OutputReference"
      params:
        "$ref": "#/definitions/PipelineParameters"
      coordinates:
        "$ref": "#/definitions/CanvasCoordinates"
    required:
      - id
      - operator
      - inputs
      - params
  Pipeline_StepInfo:
    description: Pipeline Step Info
    allOf:
      - "$ref": '#/definitions/Pipeline_Step'
      - type: object
    properties:
      pipelineParameters:
        type: object
        description: "map: name of parameter -> human-readable name of parameter"
        additionalProperties:
          type: string
    required:
      - pipelineParameters
  Pipeline_OutputReference:
    description: Output reference of pipelines.
    type: object
    properties:
      stepId:
        type: string
        description: step ID
      outputIndex:
        type: integer
        description: Index of output according to pipeline operator's output
        format: int32
    required:
      - stepId
      - outputIndex
  CommonTrainParams:
    type: object
    properties:
      inputSize:
        "$ref": "#/definitions/CommonTrainParams_InputSize"
      loi:
        type: array
        items:
          "$ref": "#/definitions/LabelOfInterest"
      defaultVisualThreshold:
        type: number
        format: float
      iouThreshold:
        type: number
        format: float
      featureExtractorLearningRate:
        type: number
        format: double
      modelLearningRate:
        type: number
        format: double
  CommonTrainParams_InputSize:
    type: object
    properties:
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
    required:
      - width
      - height
  LabelOfInterest:
    type: object
    properties:
      label:
        type: string
      threshold:
        type: number
        format: double
    required:
      - label
  ListBinaryDataset:
    description: Paginated list of binary Dataset items
    allOf:
      - "$ref": "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/BinaryDataset"
  BinaryDataset:
    description: Binary Dataset definition
    allOf:
    - "$ref": "#/definitions/AbstractAsset"
    - type: object
      properties:
        status:
          type: string
          enum:
            - IDLE
            - IMPORTING
            - EXPORTING
            - ERROR
  BinaryDatasetFile:
    description: Dataset file information object
    type: object
    properties:
      filename:
        description: Dataset file name. Please note that it may contain slashes
        type: string
      filepath:
        description: File download URL
        type: string
      filesize:
        type: integer
      modified:
        type: string
        format: date-time
    required:
      - filename
      - filepath
      - filesize
      - modified
  ListBinaryDatasetFiles:
    description: A list of Dataset files
    type: object
    allOf:
      - "$ref": "#/definitions/List"
      - type: object
        properties:
          data:
            type: array
            items:
              "$ref": "#/definitions/BinaryDatasetFile"
